-- phpMyAdmin SQL Dump
-- version 3.4.11.1deb2+deb7u1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Apr 28, 2015 at 10:18 PM
-- Server version: 5.5.41
-- PHP Version: 5.4.36-0+deb7u3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `plugandprotect`
--

-- --------------------------------------------------------

--
-- Table structure for table `tbl_logs`
--

CREATE TABLE IF NOT EXISTS `tbl_logs` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT,
  `description` varchar(128) NOT NULL,
  `IP` varchar(15) NOT NULL,
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`log_id`),
  UNIQUE KEY `date` (`date`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=31 ;

-- --------------------------------------------------------

--
-- Table structure for table `tbl_mconfig`
--

CREATE TABLE IF NOT EXISTS `tbl_mconfig` (
  `MAC` varchar(17) NOT NULL,
  `type` varchar(45) NOT NULL,
  `file` varchar(512) NOT NULL,
  `content` text NOT NULL,
  PRIMARY KEY (`MAC`,`file`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tbl_mconfig`
--

INSERT INTO `tbl_mconfig` (`MAC`, `type`, `file`, `content`) VALUES
('b8:27:eb:0f:05:c4', 'CAMERA', '/etc/motion/motion.conf', '# Rename this distribution example file to motion.conf\r\n#\r\n# This config file was generated by motion 3.2.12\r\n\r\n\r\n############################################################\r\n# Daemon\r\n############################################################\r\n\r\n# Start in daemon (background) mode and release terminal (default: off)\r\ndaemon off\r\n\r\n# File to store the process ID, also called pid file. (default: not defined)\r\n#process_id_file /var/run/motion/motion.pid \r\n\r\n############################################################\r\n# Basic Setup Mode\r\n############################################################\r\n\r\n# Start in Setup-Mode, daemon disabled. (default: off)\r\nsetup_mode off\r\n\r\n###########################################################\r\n# Capture device options\r\n############################################################\r\n\r\n# Videodevice to be used for capturing  (default /dev/video0)\r\n# for FreeBSD default is /dev/bktr0\r\nvideodevice /dev/video0\r\n\r\n# v4l2_palette allows to choose preferable palette to be use by motion\r\n# to capture from those supported by your videodevice. (default: 8)\r\n# E.g. if your videodevice supports both V4L2_PIX_FMT_SBGGR8 and\r\n# V4L2_PIX_FMT_MJPEG then motion will by default use V4L2_PIX_FMT_MJPEG.\r\n# Setting v4l2_palette to 1 forces motion to use V4L2_PIX_FMT_SBGGR8\r\n# instead.\r\n#\r\n# Values :\r\n# V4L2_PIX_FMT_SN9C10X : 0  ''S910''\r\n# V4L2_PIX_FMT_SBGGR8  : 1  ''BA81''\r\n# V4L2_PIX_FMT_MJPEG   : 2  ''MJPEG''\r\n# V4L2_PIX_FMT_JPEG    : 3  ''JPEG''\r\n# V4L2_PIX_FMT_RGB24   : 4  ''RGB3''\r\n# V4L2_PIX_FMT_UYVY    : 5  ''UYVY''\r\n# V4L2_PIX_FMT_YUYV    : 6  ''YUYV''\r\n# V4L2_PIX_FMT_YUV422P : 7  ''422P''\r\n# V4L2_PIX_FMT_YUV420  : 8  ''YU12''\r\nv4l2_palette 8\r\n\r\n# Tuner device to be used for capturing using tuner as source (default /dev/tuner0)\r\n# This is ONLY used for FreeBSD. Leave it commented out for Linux\r\n; tunerdevice /dev/tuner0\r\n\r\n# The video input to be used (default: 8)\r\n# Should normally be set to 0 or 1 for video/TV cards, and 8 for USB cameras\r\ninput 8\r\n\r\n# The video norm to use (only for video capture and TV tuner cards)\r\n# Values: 0 (PAL), 1 (NTSC), 2 (SECAM), 3 (PAL NC no colour). Default: 0 (PAL)\r\nnorm 0\r\n\r\n# The frequency to set the tuner to (kHz) (only for TV tuner cards) (default: 0)\r\nfrequency 0\r\n\r\n# Rotate image this number of degrees. The rotation affects all saved images as\r\n# well as mpeg movies. Valid values: 0 (default = no rotation), 90, 180 and 270.\r\nrotate 0\r\n\r\n# Image width (pixels). Valid range: Camera dependent, default: 352\r\nwidth 640\r\n\r\n# Image height (pixels). Valid range: Camera dependent, default: 288\r\nheight 480\r\n\r\n# Maximum number of frames to be captured per second.\r\n# Valid range: 2-100. Default: 100 (almost no limit).\r\nframerate 100\r\n\r\n# Minimum time in seconds between capturing picture frames from the camera.\r\n# Default: 0 = disabled - the capture rate is given by the camera framerate.\r\n# This option is used when you want to capture images at a rate lower than 2 per second.\r\nminimum_frame_time 0\r\n\r\n# URL to use if you are using a network camera, size will be autodetected (incl http:// ftp:// or file:///)\r\n# Must be a URL that returns single jpeg pictures or a raw mjpeg stream. Default: Not defined\r\n; netcam_url value\r\n\r\n# Username and password for network camera (only if required). Default: not defined\r\n# Syntax is user:password\r\n; netcam_userpass value\r\n\r\n# The setting for keep-alive of network socket, should improve performance on compatible net cameras.\r\n# 1.0:         The historical implementation using HTTP/1.0, closing the socket after each http request.\r\n# keep_alive:  Use HTTP/1.0 requests with keep alive header to reuse the same connection.\r\n# 1.1:         Use HTTP/1.1 requests that support keep alive as default.\r\n# Default: 1.0\r\n; netcam_http 1.0\r\n\r\n# URL to use for a netcam proxy server, if required, e.g. "http://myproxy".\r\n# If a port number other than 80 is needed, use "http://myproxy:1234".\r\n# Default: not defined\r\n; netcam_proxy value \r\n\r\n# Set less strict jpeg checks for network cameras with a poor/buggy firmware.\r\n# Default: off\r\nnetcam_tolerant_check off\r\n\r\n# Let motion regulate the brightness of a video device (default: off).\r\n# The auto_brightness feature uses the brightness option as its target value.\r\n# If brightness is zero auto_brightness will adjust to average brightness value 128.\r\n# Only recommended for cameras without auto brightness\r\nauto_brightness off\r\n\r\n# Set the initial brightness of a video device.\r\n# If auto_brightness is enabled, this value defines the average brightness level\r\n# which Motion will try and adjust to.\r\n# Valid range 0-255, default 0 = disabled\r\nbrightness 0\r\n\r\n# Set the contrast of a video device.\r\n# Valid range 0-255, default 0 = disabled\r\ncontrast 0\r\n\r\n# Set the saturation of a video device.\r\n# Valid range 0-255, default 0 = disabled\r\nsaturation 0\r\n\r\n# Set the hue of a video device (NTSC feature).\r\n# Valid range 0-255, default 0 = disabled\r\nhue 0\r\n\r\n\r\n############################################################\r\n# Round Robin (multiple inputs on same video device name)\r\n############################################################\r\n\r\n# Number of frames to capture in each roundrobin step (default: 1)\r\nroundrobin_frames 1\r\n\r\n# Number of frames to skip before each roundrobin step (default: 1)\r\nroundrobin_skip 1\r\n\r\n# Try to filter out noise generated by roundrobin (default: off)\r\nswitchfilter off\r\n\r\n\r\n############################################################\r\n# Motion Detection Settings:\r\n############################################################\r\n\r\n# Threshold for number of changed pixels in an image that\r\n# triggers motion detection (default: 1500)\r\nthreshold 1500\r\n\r\n# Automatically tune the threshold down if possible (default: off)\r\nthreshold_tune off\r\n\r\n# Noise threshold for the motion detection (default: 32)\r\nnoise_level 32\r\n\r\n# Automatically tune the noise threshold (default: on)\r\nnoise_tune on\r\n\r\n# Despeckle motion image using (e)rode or (d)ilate or (l)abel (Default: not defined)\r\n# Recommended value is EedDl. Any combination (and number of) of E, e, d, and D is valid.\r\n# (l)abeling must only be used once and the ''l'' must be the last letter.\r\n# Comment out to disable\r\ndespeckle EedDl\r\n\r\n# Detect motion in predefined areas (1 - 9). Areas are numbered like that:  1 2 3\r\n# A script (on_area_detected) is started immediately when motion is         4 5 6\r\n# detected in one of the given areas, but only once during an event.        7 8 9\r\n# One or more areas can be specified with this option. (Default: not defined)\r\n; area_detect value\r\n\r\n# PGM file to use as a sensitivity mask.\r\n# Full path name to. (Default: not defined)\r\n; mask_file value\r\n\r\n# Dynamically create a mask file during operation (default: 0)\r\n# Adjust speed of mask changes from 0 (off) to 10 (fast)\r\nsmart_mask_speed 0\r\n\r\n# Ignore sudden massive light intensity changes given as a percentage of the picture\r\n# area that changed intensity. Valid range: 0 - 100 , default: 0 = disabled\r\nlightswitch 0\r\n\r\n# Picture frames must contain motion at least the specified number of frames\r\n# in a row before they are detected as true motion. At the default of 1, all\r\n# motion is detected. Valid range: 1 to thousands, recommended 1-5\r\nminimum_motion_frames 1\r\n\r\n# Specifies the number of pre-captured (buffered) pictures from before motion\r\n# was detected that will be output at motion detection.\r\n# Recommended range: 0 to 5 (default: 0)\r\n# Do not use large values! Large values will cause Motion to skip video frames and\r\n# cause unsmooth mpegs. To smooth mpegs use larger values of post_capture instead.\r\npre_capture 0\r\n\r\n# Number of frames to capture after motion is no longer detected (default: 0)\r\npost_capture 0\r\n\r\n# Gap is the seconds of no motion detection that triggers the end of an event\r\n# An event is defined as a series of motion images taken within a short timeframe.\r\n# Recommended value is 60 seconds (Default). The value 0 is allowed and disables\r\n# events causing all Motion to be written to one single mpeg file and no pre_capture.\r\ngap 60\r\n\r\n# Maximum length in seconds of an mpeg movie\r\n# When value is exceeded a new mpeg file is created. (Default: 0 = infinite)\r\nmax_mpeg_time 0\r\n\r\n# Always save images even if there was no motion (default: off)\r\noutput_all off\r\n\r\n\r\n############################################################\r\n# Image File Output\r\n############################################################\r\n\r\n# Output ''normal'' pictures when motion is detected (default: on)\r\n# Valid values: on, off, first, best, center\r\n# When set to ''first'', only the first picture of an event is saved.\r\n# Picture with most motion of an event is saved when set to ''best''.\r\n# Picture with motion nearest center of picture is saved when set to ''center''.\r\n# Can be used as preview shot for the corresponding movie.\r\n# EDIT\r\noutput_normal on\r\n\r\n# Output pictures with only the pixels moving object (ghost images) (default: off)\r\noutput_motion off\r\n\r\n# The quality (in percent) to be used by the jpeg compression (default: 75)\r\nquality 100\r\n\r\n# Output ppm images instead of jpeg (default: off)\r\nppm off\r\n\r\n\r\n############################################################\r\n# FFMPEG related options\r\n# Film (mpeg) file output, and deinterlacing of the video input\r\n# The options movie_filename and timelapse_filename are also used\r\n# by the ffmpeg feature\r\n############################################################\r\n\r\n# Use ffmpeg to encode mpeg movies in realtime (default: off)\r\nffmpeg_cap_new off\r\n\r\n# Use ffmpeg to make movies with only the pixels moving\r\n# object (ghost images) (default: off)\r\nffmpeg_cap_motion off\r\n\r\n# Use ffmpeg to encode a timelapse movie \r\n# Default value 0 = off - else save frame every Nth second\r\nffmpeg_timelapse 0\r\n\r\n# The file rollover mode of the timelapse video\r\n# Valid values: hourly, daily (default), weekly-sunday, weekly-monday, monthly, manual\r\nffmpeg_timelapse_mode daily\r\n\r\n# Bitrate to be used by the ffmpeg encoder (default: 400000)\r\n# This option is ignored if ffmpeg_variable_bitrate is not 0 (disabled)\r\nffmpeg_bps 400000\r\n\r\n# Enables and defines variable bitrate for the ffmpeg encoder.\r\n# ffmpeg_bps is ignored if variable bitrate is enabled.\r\n# Valid values: 0 (default) = fixed bitrate defined by ffmpeg_bps,\r\n# or the range 2 - 31 where 2 means best quality and 31 is worst.\r\nffmpeg_variable_bitrate 0\r\n\r\n# Codec to used by ffmpeg for the video compression.\r\n# Timelapse mpegs are always made in mpeg1 format independent from this option.\r\n# Supported formats are: mpeg1 (ffmpeg-0.4.8 only), mpeg4 (default), and msmpeg4.\r\n# mpeg1 - gives you files with extension .mpg\r\n# mpeg4 or msmpeg4 - gives you files with extension .avi\r\n# msmpeg4 is recommended for use with Windows Media Player because\r\n# it requires no installation of codec on the Windows client.\r\n# swf - gives you a flash film with extension .swf\r\n# flv - gives you a flash video with extension .flv\r\n# ffv1 - FF video codec 1 for Lossless Encoding ( experimental )\r\n# mov - QuickTime ( testing )\r\nffmpeg_video_codec msmpeg4\r\n#ffmpeg_video_codec swf\r\n\r\n# Use ffmpeg to deinterlace video. Necessary if you use an analog camera\r\n# and see horizontal combing on moving objects in video or pictures.\r\n# (default: off)\r\nffmpeg_deinterlace off\r\n\r\n\r\n############################################################\r\n# Snapshots (Traditional Periodic Webcam File Output)\r\n############################################################\r\n\r\n# Make automated snapshot every N seconds (default: 0 = disabled)\r\nsnapshot_interval 0\r\n\r\n\r\n############################################################\r\n# Text Display\r\n# %Y = year, %m = month, %d = date,\r\n# %H = hour, %M = minute, %S = second, %T = HH:MM:SS,\r\n# %v = event, %q = frame number, %t = thread (camera) number,\r\n# %D = changed pixels, %N = noise level, \\n = new line,\r\n# %i and %J = width and height of motion area,\r\n# %K and %L = X and Y coordinates of motion center\r\n# %C = value defined by text_event - do not use with text_event!\r\n# You can put quotation marks around the text to allow\r\n# leading spaces\r\n############################################################\r\n\r\n# Locate and draw a box around the moving object.\r\n# Valid values: on, off and preview (default: off)\r\n# Set to ''preview'' will only draw a box in preview_shot pictures.\r\nlocate on\r\n\r\n# Draws the timestamp using same options as C function strftime(3)\r\n# Default: %Y-%m-%d\\n%T = date in ISO format and time in 24 hour clock\r\n# Text is placed in lower right corner\r\ntext_right %Y-%m-%d\\n%T-%q\r\n\r\n# Draw a user defined text on the images using same options as C function strftime(3)\r\n# Default: Not defined = no text\r\n# Text is placed in lower left corner\r\ntext_left MODULE-WESLEYO\r\n\r\n# Draw the number of changed pixed on the images (default: off)\r\n# Will normally be set to off except when you setup and adjust the motion settings\r\n# Text is placed in upper right corner\r\ntext_changes off\r\n\r\n# This option defines the value of the special event conversion specifier %C\r\n# You can use any conversion specifier in this option except %C. Date and time\r\n# values are from the timestamp of the first image in the current event.\r\n# Default: %Y%m%d%H%M%S\r\n# The idea is that %C can be used filenames and text_left/right for creating\r\n# a unique identifier for each event.\r\ntext_event %Y%m%d%H%M%S\r\n\r\n# Draw characters at twice normal size on images. (default: off)\r\ntext_double on\r\n\r\n\r\n############################################################\r\n# Target Directories and filenames For Images And Films\r\n# For the options snapshot_, jpeg_, mpeg_ and timelapse_filename\r\n# you can use conversion specifiers\r\n# %Y = year, %m = month, %d = date,\r\n# %H = hour, %M = minute, %S = second,\r\n# %v = event, %q = frame number, %t = thread (camera) number,\r\n# %D = changed pixels, %N = noise level,\r\n# %i and %J = width and height of motion area,\r\n# %K and %L = X and Y coordinates of motion center\r\n# %C = value defined by text_event\r\n# Quotation marks round string are allowed.\r\n############################################################\r\n\r\n# Target base directory for pictures and films\r\n# Recommended to use absolute path. (Default: current working directory)\r\ntarget_dir /mnt/nfscontrol/b8:27:eb:0f:05:c4\r\n#target_dir /dev/null\r\n#target_dir /root/test\r\n\r\n# File path for snapshots (jpeg or ppm) relative to target_dir\r\n# Default: %v-%Y%m%d%H%M%S-snapshot\r\n# Default value is equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-snapshot\r\n# File extension .jpg or .ppm is automatically added so do not include this.\r\n# Note: A symbolic link called lastsnap.jpg created in the target_dir will always\r\n# point to the latest snapshot, unless snapshot_filename is exactly ''lastsnap''\r\nsnapshot_filename %v-%Y%m%d%H%M%S-snapshot\r\n\r\n# File path for motion triggered images (jpeg or ppm) relative to target_dir\r\n# Default: %v-%Y%m%d%H%M%S-%q\r\n# Default value is equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-%q\r\n# File extension .jpg or .ppm is automatically added so do not include this\r\n# Set to ''preview'' together with best-preview feature enables special naming\r\n# convention for preview shots. See motion guide for details\r\njpeg_filename %v-%Y%m%d%H%M%S-%q\r\n\r\n# File path for motion triggered ffmpeg films (mpeg) relative to target_dir\r\n# Default: %v-%Y%m%d%H%M%S\r\n# Default value is equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d/%H%M%S\r\n# File extension .mpg or .avi is automatically added so do not include this\r\n# This option was previously called ffmpeg_filename\r\nmovie_filename %v-%Y%m%d%H%M%S\r\n\r\n# File path for timelapse mpegs relative to target_dir\r\n# Default: %Y%m%d-timelapse\r\n# Default value is near equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d-timelapse\r\n# File extension .mpg is automatically added so do not include this\r\ntimelapse_filename %Y%m%d-timelapse\r\n\r\n\r\n############################################################\r\n# Live Webcam Server\r\n############################################################\r\n\r\n# The mini-http server listens to this port for requests (default: 0 = disabled)\r\nwebcam_port 1027\r\n\r\n# Quality of the jpeg (in percent) images produced (default: 50) \r\nwebcam_quality 100\r\n\r\n# Output frames at 1 fps when no motion is detected and increase to the\r\n# rate given by webcam_maxrate when motion is detected (default: off)\r\nwebcam_motion off\r\n\r\n# Maximum framerate for webcam streams (default: 1)\r\nwebcam_maxrate 30\r\n\r\n# Restrict webcam connections to localhost only (default: on)\r\nwebcam_localhost off\r\n\r\n# Limits the number of images per connection (default: 0 = unlimited)\r\n# Number can be defined by multiplying actual webcam rate by desired number of seconds\r\n# Actual webcam rate is the smallest of the numbers framerate and webcam_maxrate\r\nwebcam_limit 0\r\n\r\n\r\n############################################################\r\n# HTTP Based Control\r\n############################################################\r\n\r\n# TCP/IP port for the http server to listen on (default: 0 = disabled)\r\ncontrol_port 8080\r\n\r\n# Restrict control connections to localhost only (default: on)\r\ncontrol_localhost off\r\n\r\n# Output for http server, select off to choose raw text plain (default: on)\r\ncontrol_html_output on\r\n\r\n# Authentication for the http based control. Syntax username:password\r\n# Default: not defined (Disabled)\r\n; control_authentication username:password\r\n\r\n\r\n############################################################\r\n# Tracking (Pan/Tilt)\r\n############################################################\r\n\r\n# Type of tracker (0=none (default), 1=stepper, 2=iomojo, 3=pwc, 4=generic, 5=uvcvideo)\r\n# The generic type enables the definition of motion center and motion size to\r\n# be used with the conversion specifiers for options like on_motion_detected\r\ntrack_type 0\r\n\r\n# Enable auto tracking (default: off)\r\ntrack_auto off\r\n\r\n# Serial port of motor (default: none)\r\n; track_port value\r\n\r\n# Motor number for x-axis (default: 0)\r\ntrack_motorx 0\r\n\r\n# Motor number for y-axis (default: 0)\r\ntrack_motory 0\r\n\r\n# Maximum value on x-axis (default: 0)\r\ntrack_maxx 0\r\n\r\n# Maximum value on y-axis (default: 0)\r\ntrack_maxy 0\r\n\r\n# ID of an iomojo camera if used (default: 0)\r\ntrack_iomojo_id 0\r\n\r\n# Angle in degrees the camera moves per step on the X-axis\r\n# with auto-track (default: 10)\r\n# Currently only used with pwc type cameras\r\ntrack_step_angle_x 10\r\n\r\n# Angle in degrees the camera moves per step on the Y-axis\r\n# with auto-track (default: 10)\r\n# Currently only used with pwc type cameras\r\ntrack_step_angle_y 10\r\n\r\n# Delay to wait for after tracking movement as number\r\n# of picture frames (default: 10)\r\ntrack_move_wait 10\r\n\r\n# Speed to set the motor to (stepper motor option) (default: 255)\r\ntrack_speed 255\r\n\r\n# Number of steps to make (stepper motor option) (default: 40)\r\ntrack_stepsize 40\r\n\r\n\r\n############################################################\r\n# External Commands, Warnings and Logging:\r\n# You can use conversion specifiers for the on_xxxx commands\r\n# %Y = year, %m = month, %d = date,\r\n# %H = hour, %M = minute, %S = second,\r\n# %v = event, %q = frame number, %t = thread (camera) number,\r\n# %D = changed pixels, %N = noise level,\r\n# %i and %J = width and height of motion area,\r\n# %K and %L = X and Y coordinates of motion center\r\n# %C = value defined by text_event\r\n# %f = filename with full path\r\n# %n = number indicating filetype\r\n# Both %f and %n are only defined for on_picture_save,\r\n# on_movie_start and on_movie_end\r\n# Quotation marks round string are allowed.\r\n############################################################\r\n\r\n# Do not sound beeps when detecting motion (default: on)\r\n# Note: Motion never beeps when running in daemon mode.\r\nquiet on\r\n\r\n# Command to be executed when an event starts. (default: none)\r\n# An event starts at first motion detected after a period of no motion defined by gap \r\n; on_event_start value\r\n\r\n# Command to be executed when an event ends after a period of no motion\r\n# (default: none). The period of no motion is defined by option gap.\r\n; on_event_end value\r\n\r\n# Command to be executed when a picture (.ppm|.jpg) is saved (default: none)\r\n# To give the filename as an argument to a command append it with %f\r\n; on_picture_save value\r\n\r\n# Command to be executed when a motion frame is detected (default: none)\r\n; on_motion_detected value\r\n\r\n# Command to be executed when motion in a predefined area is detected\r\n# Check option ''area_detect''.   (default: none)\r\n; on_area_detected value\r\n\r\n# Command to be executed when a movie file (.mpg|.avi) is created. (default: none)\r\n# To give the filename as an argument to a command append it with %f\r\n; on_movie_start value\r\n\r\n# Command to be executed when a movie file (.mpg|.avi) is closed. (default: none)\r\n# To give the filename as an argument to a command append it with %f\r\n; on_movie_end value\r\n#on_movie_end /root/create_video_link.sh %f\r\n\r\n# Command to be executed when a camera can''t be opened or if it is lost\r\n# NOTE: There is situations when motion doesn''t detect a lost camera!\r\n# It depends on the driver, some drivers don''t detect a lost camera at all\r\n# Some hang the motion thread. Some even hang the PC! (default: none)\r\n; on_camera_lost value\r\n\r\n############################################################\r\n# Common Options For MySQL and PostgreSQL database features.\r\n# Options require the MySQL/PostgreSQL options to be active also.\r\n############################################################\r\n\r\n# Log to the database when creating motion triggered image file  (default: on)\r\nsql_log_image on\r\n\r\n# Log to the database when creating a snapshot image file (default: on)\r\nsql_log_snapshot on\r\n\r\n# Log to the database when creating motion triggered mpeg file (default: off)\r\nsql_log_mpeg off\r\n\r\n# Log to the database when creating timelapse mpeg file (default: off)\r\nsql_log_timelapse off\r\n\r\n# SQL query string that is sent to the database\r\n# Use same conversion specifiers has for text features\r\n# Additional special conversion specifiers are\r\n# %n = the number representing the file_type\r\n# %f = filename with full path\r\n# Default value:\r\n# insert into security(camera, filename, frame, file_type, time_stamp, text_event) values(''%t'', ''%f'', ''%q'', ''%n'', ''%Y-%m-%d %T'', ''%C'')\r\nsql_query insert into security(camera, filename, frame, file_type, time_stamp, event_time_stamp) values(''%t'', ''%f'', ''%q'', ''%n'', ''%Y-%m-%d %T'', ''%C'')\r\n\r\n\r\n############################################################\r\n# Database Options For MySQL\r\n############################################################\r\n\r\n# Mysql database to log to (default: not defined)\r\n; mysql_db value\r\n\r\n# The host on which the database is located (default: localhost)\r\n; mysql_host value\r\n\r\n# User account name for MySQL database (default: not defined)\r\n; mysql_user value\r\n\r\n# User password for MySQL database (default: not defined)\r\n; mysql_password value\r\n\r\n\r\n############################################################\r\n# Database Options For PostgreSQL\r\n############################################################\r\n\r\n# PostgreSQL database to log to (default: not defined)\r\n; pgsql_db value\r\n\r\n# The host on which the database is located (default: localhost)\r\n; pgsql_host value\r\n\r\n# User account name for PostgreSQL database (default: not defined)\r\n; pgsql_user value\r\n\r\n# User password for PostgreSQL database (default: not defined)\r\n; pgsql_password value\r\n\r\n# Port on which the PostgreSQL database is located (default: 5432)\r\n; pgsql_port 5432\r\n\r\n\r\n############################################################\r\n# Video Loopback Device (vloopback project)\r\n############################################################\r\n\r\n# Output images to a video4linux loopback device\r\n# The value ''-'' means next available (default: not defined)\r\n; video_pipe value\r\n\r\n# Output motion images to a video4linux loopback device\r\n# The value ''-'' means next available (default: not defined)\r\n; motion_video_pipe value\r\n\r\n\r\n##############################################################\r\n# Thread config files - One for each camera.\r\n# Except if only one camera - You only need this config file.\r\n# If you have more than one camera you MUST define one thread\r\n# config file for each camera in addition to this config file.\r\n##############################################################\r\n\r\n# Remember: If you have more than one camera you must have one\r\n# thread file for each camera. E.g. 2 cameras requires 3 files:\r\n# This motion.conf file AND thread1.conf and thread2.conf.\r\n# Only put the options that are unique to each camera in the\r\n# thread config files. \r\n; thread /usr/local/etc/thread1.conf\r\n; thread /usr/local/etc/thread2.conf\r\n; thread /usr/local/etc/thread3.conf\r\n; thread /usr/local/etc/thread4.conf\r\n\r\n');
INSERT INTO `tbl_mconfig` (`MAC`, `type`, `file`, `content`) VALUES
('b8:27:eb:d5:dc:f0', 'CAMERA', '/etc/motion/motion.conf', '# Rename this distribution example file to motion.conf\r\n#\r\n# This config file was generated by motion 3.2.12\r\n\r\n\r\n############################################################\r\n# Daemon\r\n############################################################\r\n\r\n# Start in daemon (background) mode and release terminal (default: off)\r\ndaemon off\r\n\r\n# File to store the process ID, also called pid file. (default: not defined)\r\n#process_id_file /var/run/motion/motion.pid \r\n\r\n############################################################\r\n# Basic Setup Mode\r\n############################################################\r\n\r\n# Start in Setup-Mode, daemon disabled. (default: off)\r\nsetup_mode off\r\n\r\n###########################################################\r\n# Capture device options\r\n############################################################\r\n\r\n# Videodevice to be used for capturing  (default /dev/video0)\r\n# for FreeBSD default is /dev/bktr0\r\nvideodevice /dev/video0\r\n\r\n# v4l2_palette allows to choose preferable palette to be use by motion\r\n# to capture from those supported by your videodevice. (default: 8)\r\n# E.g. if your videodevice supports both V4L2_PIX_FMT_SBGGR8 and\r\n# V4L2_PIX_FMT_MJPEG then motion will by default use V4L2_PIX_FMT_MJPEG.\r\n# Setting v4l2_palette to 1 forces motion to use V4L2_PIX_FMT_SBGGR8\r\n# instead.\r\n#\r\n# Values :\r\n# V4L2_PIX_FMT_SN9C10X : 0  ''S910''\r\n# V4L2_PIX_FMT_SBGGR8  : 1  ''BA81''\r\n# V4L2_PIX_FMT_MJPEG   : 2  ''MJPEG''\r\n# V4L2_PIX_FMT_JPEG    : 3  ''JPEG''\r\n# V4L2_PIX_FMT_RGB24   : 4  ''RGB3''\r\n# V4L2_PIX_FMT_UYVY    : 5  ''UYVY''\r\n# V4L2_PIX_FMT_YUYV    : 6  ''YUYV''\r\n# V4L2_PIX_FMT_YUV422P : 7  ''422P''\r\n# V4L2_PIX_FMT_YUV420  : 8  ''YU12''\r\nv4l2_palette 8\r\n\r\n# Tuner device to be used for capturing using tuner as source (default /dev/tuner0)\r\n# This is ONLY used for FreeBSD. Leave it commented out for Linux\r\n; tunerdevice /dev/tuner0\r\n\r\n# The video input to be used (default: 8)\r\n# Should normally be set to 0 or 1 for video/TV cards, and 8 for USB cameras\r\ninput 8\r\n\r\n# The video norm to use (only for video capture and TV tuner cards)\r\n# Values: 0 (PAL), 1 (NTSC), 2 (SECAM), 3 (PAL NC no colour). Default: 0 (PAL)\r\nnorm 0\r\n\r\n# The frequency to set the tuner to (kHz) (only for TV tuner cards) (default: 0)\r\nfrequency 0\r\n\r\n# Rotate image this number of degrees. The rotation affects all saved images as\r\n# well as mpeg movies. Valid values: 0 (default = no rotation), 90, 180 and 270.\r\nrotate 0\r\n\r\n# Image width (pixels). Valid range: Camera dependent, default: 352\r\nwidth 640\r\n\r\n# Image height (pixels). Valid range: Camera dependent, default: 288\r\nheight 480\r\n\r\n# Maximum number of frames to be captured per second.\r\n# Valid range: 2-100. Default: 100 (almost no limit).\r\nframerate 100\r\n\r\n# Minimum time in seconds between capturing picture frames from the camera.\r\n# Default: 0 = disabled - the capture rate is given by the camera framerate.\r\n# This option is used when you want to capture images at a rate lower than 2 per second.\r\nminimum_frame_time 0\r\n\r\n# URL to use if you are using a network camera, size will be autodetected (incl http:// ftp:// or file:///)\r\n# Must be a URL that returns single jpeg pictures or a raw mjpeg stream. Default: Not defined\r\n; netcam_url value\r\n\r\n# Username and password for network camera (only if required). Default: not defined\r\n# Syntax is user:password\r\n; netcam_userpass value\r\n\r\n# The setting for keep-alive of network socket, should improve performance on compatible net cameras.\r\n# 1.0:         The historical implementation using HTTP/1.0, closing the socket after each http request.\r\n# keep_alive:  Use HTTP/1.0 requests with keep alive header to reuse the same connection.\r\n# 1.1:         Use HTTP/1.1 requests that support keep alive as default.\r\n# Default: 1.0\r\n; netcam_http 1.0\r\n\r\n# URL to use for a netcam proxy server, if required, e.g. "http://myproxy".\r\n# If a port number other than 80 is needed, use "http://myproxy:1234".\r\n# Default: not defined\r\n; netcam_proxy value \r\n\r\n# Set less strict jpeg checks for network cameras with a poor/buggy firmware.\r\n# Default: off\r\nnetcam_tolerant_check off\r\n\r\n# Let motion regulate the brightness of a video device (default: off).\r\n# The auto_brightness feature uses the brightness option as its target value.\r\n# If brightness is zero auto_brightness will adjust to average brightness value 128.\r\n# Only recommended for cameras without auto brightness\r\nauto_brightness off\r\n\r\n# Set the initial brightness of a video device.\r\n# If auto_brightness is enabled, this value defines the average brightness level\r\n# which Motion will try and adjust to.\r\n# Valid range 0-255, default 0 = disabled\r\nbrightness 0\r\n\r\n# Set the contrast of a video device.\r\n# Valid range 0-255, default 0 = disabled\r\ncontrast 0\r\n\r\n# Set the saturation of a video device.\r\n# Valid range 0-255, default 0 = disabled\r\nsaturation 0\r\n\r\n# Set the hue of a video device (NTSC feature).\r\n# Valid range 0-255, default 0 = disabled\r\nhue 0\r\n\r\n\r\n############################################################\r\n# Round Robin (multiple inputs on same video device name)\r\n############################################################\r\n\r\n# Number of frames to capture in each roundrobin step (default: 1)\r\nroundrobin_frames 1\r\n\r\n# Number of frames to skip before each roundrobin step (default: 1)\r\nroundrobin_skip 1\r\n\r\n# Try to filter out noise generated by roundrobin (default: off)\r\nswitchfilter off\r\n\r\n\r\n############################################################\r\n# Motion Detection Settings:\r\n############################################################\r\n\r\n# Threshold for number of changed pixels in an image that\r\n# triggers motion detection (default: 1500)\r\nthreshold 1500\r\n\r\n# Automatically tune the threshold down if possible (default: off)\r\nthreshold_tune off\r\n\r\n# Noise threshold for the motion detection (default: 32)\r\nnoise_level 32\r\n\r\n# Automatically tune the noise threshold (default: on)\r\nnoise_tune on\r\n\r\n# Despeckle motion image using (e)rode or (d)ilate or (l)abel (Default: not defined)\r\n# Recommended value is EedDl. Any combination (and number of) of E, e, d, and D is valid.\r\n# (l)abeling must only be used once and the ''l'' must be the last letter.\r\n# Comment out to disable\r\ndespeckle EedDl\r\n\r\n# Detect motion in predefined areas (1 - 9). Areas are numbered like that:  1 2 3\r\n# A script (on_area_detected) is started immediately when motion is         4 5 6\r\n# detected in one of the given areas, but only once during an event.        7 8 9\r\n# One or more areas can be specified with this option. (Default: not defined)\r\n; area_detect value\r\n\r\n# PGM file to use as a sensitivity mask.\r\n# Full path name to. (Default: not defined)\r\n; mask_file value\r\n\r\n# Dynamically create a mask file during operation (default: 0)\r\n# Adjust speed of mask changes from 0 (off) to 10 (fast)\r\nsmart_mask_speed 0\r\n\r\n# Ignore sudden massive light intensity changes given as a percentage of the picture\r\n# area that changed intensity. Valid range: 0 - 100 , default: 0 = disabled\r\nlightswitch 0\r\n\r\n# Picture frames must contain motion at least the specified number of frames\r\n# in a row before they are detected as true motion. At the default of 1, all\r\n# motion is detected. Valid range: 1 to thousands, recommended 1-5\r\nminimum_motion_frames 1\r\n\r\n# Specifies the number of pre-captured (buffered) pictures from before motion\r\n# was detected that will be output at motion detection.\r\n# Recommended range: 0 to 5 (default: 0)\r\n# Do not use large values! Large values will cause Motion to skip video frames and\r\n# cause unsmooth mpegs. To smooth mpegs use larger values of post_capture instead.\r\npre_capture 0\r\n\r\n# Number of frames to capture after motion is no longer detected (default: 0)\r\npost_capture 0\r\n\r\n# Gap is the seconds of no motion detection that triggers the end of an event\r\n# An event is defined as a series of motion images taken within a short timeframe.\r\n# Recommended value is 60 seconds (Default). The value 0 is allowed and disables\r\n# events causing all Motion to be written to one single mpeg file and no pre_capture.\r\ngap 60\r\n\r\n# Maximum length in seconds of an mpeg movie\r\n# When value is exceeded a new mpeg file is created. (Default: 0 = infinite)\r\nmax_mpeg_time 0\r\n\r\n# Always save images even if there was no motion (default: off)\r\noutput_all off\r\n\r\n\r\n############################################################\r\n# Image File Output\r\n############################################################\r\n\r\n# Output ''normal'' pictures when motion is detected (default: on)\r\n# Valid values: on, off, first, best, center\r\n# When set to ''first'', only the first picture of an event is saved.\r\n# Picture with most motion of an event is saved when set to ''best''.\r\n# Picture with motion nearest center of picture is saved when set to ''center''.\r\n# Can be used as preview shot for the corresponding movie.\r\n# EDIT\r\noutput_normal on\r\n\r\n# Output pictures with only the pixels moving object (ghost images) (default: off)\r\noutput_motion off\r\n\r\n# The quality (in percent) to be used by the jpeg compression (default: 75)\r\nquality 100\r\n\r\n# Output ppm images instead of jpeg (default: off)\r\nppm off\r\n\r\n\r\n############################################################\r\n# FFMPEG related options\r\n# Film (mpeg) file output, and deinterlacing of the video input\r\n# The options movie_filename and timelapse_filename are also used\r\n# by the ffmpeg feature\r\n############################################################\r\n\r\n# Use ffmpeg to encode mpeg movies in realtime (default: off)\r\nffmpeg_cap_new off\r\n\r\n# Use ffmpeg to make movies with only the pixels moving\r\n# object (ghost images) (default: off)\r\nffmpeg_cap_motion off\r\n\r\n# Use ffmpeg to encode a timelapse movie \r\n# Default value 0 = off - else save frame every Nth second\r\nffmpeg_timelapse 0\r\n\r\n# The file rollover mode of the timelapse video\r\n# Valid values: hourly, daily (default), weekly-sunday, weekly-monday, monthly, manual\r\nffmpeg_timelapse_mode daily\r\n\r\n# Bitrate to be used by the ffmpeg encoder (default: 400000)\r\n# This option is ignored if ffmpeg_variable_bitrate is not 0 (disabled)\r\nffmpeg_bps 400000\r\n\r\n# Enables and defines variable bitrate for the ffmpeg encoder.\r\n# ffmpeg_bps is ignored if variable bitrate is enabled.\r\n# Valid values: 0 (default) = fixed bitrate defined by ffmpeg_bps,\r\n# or the range 2 - 31 where 2 means best quality and 31 is worst.\r\nffmpeg_variable_bitrate 0\r\n\r\n# Codec to used by ffmpeg for the video compression.\r\n# Timelapse mpegs are always made in mpeg1 format independent from this option.\r\n# Supported formats are: mpeg1 (ffmpeg-0.4.8 only), mpeg4 (default), and msmpeg4.\r\n# mpeg1 - gives you files with extension .mpg\r\n# mpeg4 or msmpeg4 - gives you files with extension .avi\r\n# msmpeg4 is recommended for use with Windows Media Player because\r\n# it requires no installation of codec on the Windows client.\r\n# swf - gives you a flash film with extension .swf\r\n# flv - gives you a flash video with extension .flv\r\n# ffv1 - FF video codec 1 for Lossless Encoding ( experimental )\r\n# mov - QuickTime ( testing )\r\nffmpeg_video_codec msmpeg4\r\n#ffmpeg_video_codec swf\r\n\r\n# Use ffmpeg to deinterlace video. Necessary if you use an analog camera\r\n# and see horizontal combing on moving objects in video or pictures.\r\n# (default: off)\r\nffmpeg_deinterlace off\r\n\r\n\r\n############################################################\r\n# Snapshots (Traditional Periodic Webcam File Output)\r\n############################################################\r\n\r\n# Make automated snapshot every N seconds (default: 0 = disabled)\r\nsnapshot_interval 0\r\n\r\n\r\n############################################################\r\n# Text Display\r\n# %Y = year, %m = month, %d = date,\r\n# %H = hour, %M = minute, %S = second, %T = HH:MM:SS,\r\n# %v = event, %q = frame number, %t = thread (camera) number,\r\n# %D = changed pixels, %N = noise level, \\n = new line,\r\n# %i and %J = width and height of motion area,\r\n# %K and %L = X and Y coordinates of motion center\r\n# %C = value defined by text_event - do not use with text_event!\r\n# You can put quotation marks around the text to allow\r\n# leading spaces\r\n############################################################\r\n\r\n# Locate and draw a box around the moving object.\r\n# Valid values: on, off and preview (default: off)\r\n# Set to ''preview'' will only draw a box in preview_shot pictures.\r\nlocate on\r\n\r\n# Draws the timestamp using same options as C function strftime(3)\r\n# Default: %Y-%m-%d\\n%T = date in ISO format and time in 24 hour clock\r\n# Text is placed in lower right corner\r\ntext_right %Y-%m-%d\\n%T-%q\r\n\r\n# Draw a user defined text on the images using same options as C function strftime(3)\r\n# Default: Not defined = no text\r\n# Text is placed in lower left corner\r\ntext_left MODULE-JENS\r\n\r\n# Draw the number of changed pixed on the images (default: off)\r\n# Will normally be set to off except when you setup and adjust the motion settings\r\n# Text is placed in upper right corner\r\ntext_changes off\r\n\r\n# This option defines the value of the special event conversion specifier %C\r\n# You can use any conversion specifier in this option except %C. Date and time\r\n# values are from the timestamp of the first image in the current event.\r\n# Default: %Y%m%d%H%M%S\r\n# The idea is that %C can be used filenames and text_left/right for creating\r\n# a unique identifier for each event.\r\ntext_event %Y%m%d%H%M%S\r\n\r\n# Draw characters at twice normal size on images. (default: off)\r\ntext_double on\r\n\r\n\r\n############################################################\r\n# Target Directories and filenames For Images And Films\r\n# For the options snapshot_, jpeg_, mpeg_ and timelapse_filename\r\n# you can use conversion specifiers\r\n# %Y = year, %m = month, %d = date,\r\n# %H = hour, %M = minute, %S = second,\r\n# %v = event, %q = frame number, %t = thread (camera) number,\r\n# %D = changed pixels, %N = noise level,\r\n# %i and %J = width and height of motion area,\r\n# %K and %L = X and Y coordinates of motion center\r\n# %C = value defined by text_event\r\n# Quotation marks round string are allowed.\r\n############################################################\r\n\r\n# Target base directory for pictures and films\r\n# Recommended to use absolute path. (Default: current working directory)\r\ntarget_dir /mnt/nfscontrol/b8:27:eb:d5:dc:f0\r\n#target_dir /dev/null\r\n#target_dir /root/test\r\n\r\n# File path for snapshots (jpeg or ppm) relative to target_dir\r\n# Default: %v-%Y%m%d%H%M%S-snapshot\r\n# Default value is equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-snapshot\r\n# File extension .jpg or .ppm is automatically added so do not include this.\r\n# Note: A symbolic link called lastsnap.jpg created in the target_dir will always\r\n# point to the latest snapshot, unless snapshot_filename is exactly ''lastsnap''\r\nsnapshot_filename %v-%Y%m%d%H%M%S-snapshot\r\n\r\n# File path for motion triggered images (jpeg or ppm) relative to target_dir\r\n# Default: %v-%Y%m%d%H%M%S-%q\r\n# Default value is equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d/%H/%M/%S-%q\r\n# File extension .jpg or .ppm is automatically added so do not include this\r\n# Set to ''preview'' together with best-preview feature enables special naming\r\n# convention for preview shots. See motion guide for details\r\njpeg_filename %v-%Y%m%d%H%M%S-%q\r\n\r\n# File path for motion triggered ffmpeg films (mpeg) relative to target_dir\r\n# Default: %v-%Y%m%d%H%M%S\r\n# Default value is equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d/%H%M%S\r\n# File extension .mpg or .avi is automatically added so do not include this\r\n# This option was previously called ffmpeg_filename\r\nmovie_filename %v-%Y%m%d%H%M%S\r\n\r\n# File path for timelapse mpegs relative to target_dir\r\n# Default: %Y%m%d-timelapse\r\n# Default value is near equivalent to legacy oldlayout option\r\n# For Motion 3.0 compatible mode choose: %Y/%m/%d-timelapse\r\n# File extension .mpg is automatically added so do not include this\r\ntimelapse_filename %Y%m%d-timelapse\r\n\r\n\r\n############################################################\r\n# Live Webcam Server\r\n############################################################\r\n\r\n# The mini-http server listens to this port for requests (default: 0 = disabled)\r\nwebcam_port 1027\r\n\r\n# Quality of the jpeg (in percent) images produced (default: 50) \r\nwebcam_quality 100\r\n\r\n# Output frames at 1 fps when no motion is detected and increase to the\r\n# rate given by webcam_maxrate when motion is detected (default: off)\r\nwebcam_motion off\r\n\r\n# Maximum framerate for webcam streams (default: 1)\r\nwebcam_maxrate 30\r\n\r\n# Restrict webcam connections to localhost only (default: on)\r\nwebcam_localhost off\r\n\r\n# Limits the number of images per connection (default: 0 = unlimited)\r\n# Number can be defined by multiplying actual webcam rate by desired number of seconds\r\n# Actual webcam rate is the smallest of the numbers framerate and webcam_maxrate\r\nwebcam_limit 0\r\n\r\n\r\n############################################################\r\n# HTTP Based Control\r\n############################################################\r\n\r\n# TCP/IP port for the http server to listen on (default: 0 = disabled)\r\ncontrol_port 8080\r\n\r\n# Restrict control connections to localhost only (default: on)\r\ncontrol_localhost off\r\n\r\n# Output for http server, select off to choose raw text plain (default: on)\r\ncontrol_html_output on\r\n\r\n# Authentication for the http based control. Syntax username:password\r\n# Default: not defined (Disabled)\r\n; control_authentication username:password\r\n\r\n\r\n############################################################\r\n# Tracking (Pan/Tilt)\r\n############################################################\r\n\r\n# Type of tracker (0=none (default), 1=stepper, 2=iomojo, 3=pwc, 4=generic, 5=uvcvideo)\r\n# The generic type enables the definition of motion center and motion size to\r\n# be used with the conversion specifiers for options like on_motion_detected\r\ntrack_type 0\r\n\r\n# Enable auto tracking (default: off)\r\ntrack_auto off\r\n\r\n# Serial port of motor (default: none)\r\n; track_port value\r\n\r\n# Motor number for x-axis (default: 0)\r\ntrack_motorx 0\r\n\r\n# Motor number for y-axis (default: 0)\r\ntrack_motory 0\r\n\r\n# Maximum value on x-axis (default: 0)\r\ntrack_maxx 0\r\n\r\n# Maximum value on y-axis (default: 0)\r\ntrack_maxy 0\r\n\r\n# ID of an iomojo camera if used (default: 0)\r\ntrack_iomojo_id 0\r\n\r\n# Angle in degrees the camera moves per step on the X-axis\r\n# with auto-track (default: 10)\r\n# Currently only used with pwc type cameras\r\ntrack_step_angle_x 10\r\n\r\n# Angle in degrees the camera moves per step on the Y-axis\r\n# with auto-track (default: 10)\r\n# Currently only used with pwc type cameras\r\ntrack_step_angle_y 10\r\n\r\n# Delay to wait for after tracking movement as number\r\n# of picture frames (default: 10)\r\ntrack_move_wait 10\r\n\r\n# Speed to set the motor to (stepper motor option) (default: 255)\r\ntrack_speed 255\r\n\r\n# Number of steps to make (stepper motor option) (default: 40)\r\ntrack_stepsize 40\r\n\r\n\r\n############################################################\r\n# External Commands, Warnings and Logging:\r\n# You can use conversion specifiers for the on_xxxx commands\r\n# %Y = year, %m = month, %d = date,\r\n# %H = hour, %M = minute, %S = second,\r\n# %v = event, %q = frame number, %t = thread (camera) number,\r\n# %D = changed pixels, %N = noise level,\r\n# %i and %J = width and height of motion area,\r\n# %K and %L = X and Y coordinates of motion center\r\n# %C = value defined by text_event\r\n# %f = filename with full path\r\n# %n = number indicating filetype\r\n# Both %f and %n are only defined for on_picture_save,\r\n# on_movie_start and on_movie_end\r\n# Quotation marks round string are allowed.\r\n############################################################\r\n\r\n# Do not sound beeps when detecting motion (default: on)\r\n# Note: Motion never beeps when running in daemon mode.\r\nquiet on\r\n\r\n# Command to be executed when an event starts. (default: none)\r\n# An event starts at first motion detected after a period of no motion defined by gap \r\n; on_event_start value\r\n\r\n# Command to be executed when an event ends after a period of no motion\r\n# (default: none). The period of no motion is defined by option gap.\r\n; on_event_end value\r\n\r\n# Command to be executed when a picture (.ppm|.jpg) is saved (default: none)\r\n# To give the filename as an argument to a command append it with %f\r\n; on_picture_save value\r\n\r\n# Command to be executed when a motion frame is detected (default: none)\r\n; on_motion_detected value\r\n\r\n# Command to be executed when motion in a predefined area is detected\r\n# Check option ''area_detect''.   (default: none)\r\n; on_area_detected value\r\n\r\n# Command to be executed when a movie file (.mpg|.avi) is created. (default: none)\r\n# To give the filename as an argument to a command append it with %f\r\n; on_movie_start value\r\n\r\n# Command to be executed when a movie file (.mpg|.avi) is closed. (default: none)\r\n# To give the filename as an argument to a command append it with %f\r\n; on_movie_end value\r\n#on_movie_end /root/create_video_link.sh %f\r\n\r\n# Command to be executed when a camera can''t be opened or if it is lost\r\n# NOTE: There is situations when motion doesn''t detect a lost camera!\r\n# It depends on the driver, some drivers don''t detect a lost camera at all\r\n# Some hang the motion thread. Some even hang the PC! (default: none)\r\n; on_camera_lost value\r\n\r\n############################################################\r\n# Common Options For MySQL and PostgreSQL database features.\r\n# Options require the MySQL/PostgreSQL options to be active also.\r\n############################################################\r\n\r\n# Log to the database when creating motion triggered image file  (default: on)\r\nsql_log_image on\r\n\r\n# Log to the database when creating a snapshot image file (default: on)\r\nsql_log_snapshot on\r\n\r\n# Log to the database when creating motion triggered mpeg file (default: off)\r\nsql_log_mpeg off\r\n\r\n# Log to the database when creating timelapse mpeg file (default: off)\r\nsql_log_timelapse off\r\n\r\n# SQL query string that is sent to the database\r\n# Use same conversion specifiers has for text features\r\n# Additional special conversion specifiers are\r\n# %n = the number representing the file_type\r\n# %f = filename with full path\r\n# Default value:\r\n# insert into security(camera, filename, frame, file_type, time_stamp, text_event) values(''%t'', ''%f'', ''%q'', ''%n'', ''%Y-%m-%d %T'', ''%C'')\r\nsql_query insert into security(camera, filename, frame, file_type, time_stamp, event_time_stamp) values(''%t'', ''%f'', ''%q'', ''%n'', ''%Y-%m-%d %T'', ''%C'')\r\n\r\n\r\n############################################################\r\n# Database Options For MySQL\r\n############################################################\r\n\r\n# Mysql database to log to (default: not defined)\r\n; mysql_db value\r\n\r\n# The host on which the database is located (default: localhost)\r\n; mysql_host value\r\n\r\n# User account name for MySQL database (default: not defined)\r\n; mysql_user value\r\n\r\n# User password for MySQL database (default: not defined)\r\n; mysql_password value\r\n\r\n\r\n############################################################\r\n# Database Options For PostgreSQL\r\n############################################################\r\n\r\n# PostgreSQL database to log to (default: not defined)\r\n; pgsql_db value\r\n\r\n# The host on which the database is located (default: localhost)\r\n; pgsql_host value\r\n\r\n# User account name for PostgreSQL database (default: not defined)\r\n; pgsql_user value\r\n\r\n# User password for PostgreSQL database (default: not defined)\r\n; pgsql_password value\r\n\r\n# Port on which the PostgreSQL database is located (default: 5432)\r\n; pgsql_port 5432\r\n\r\n\r\n############################################################\r\n# Video Loopback Device (vloopback project)\r\n############################################################\r\n\r\n# Output images to a video4linux loopback device\r\n# The value ''-'' means next available (default: not defined)\r\n; video_pipe value\r\n\r\n# Output motion images to a video4linux loopback device\r\n# The value ''-'' means next available (default: not defined)\r\n; motion_video_pipe value\r\n\r\n\r\n##############################################################\r\n# Thread config files - One for each camera.\r\n# Except if only one camera - You only need this config file.\r\n# If you have more than one camera you MUST define one thread\r\n# config file for each camera in addition to this config file.\r\n##############################################################\r\n\r\n# Remember: If you have more than one camera you must have one\r\n# thread file for each camera. E.g. 2 cameras requires 3 files:\r\n# This motion.conf file AND thread1.conf and thread2.conf.\r\n# Only put the options that are unique to each camera in the\r\n# thread config files. \r\n; thread /usr/local/etc/thread1.conf\r\n; thread /usr/local/etc/thread2.conf\r\n; thread /usr/local/etc/thread3.conf\r\n; thread /usr/local/etc/thread4.conf\r\n\r\n'),
('ff:ff:ff:ff:ff:ff', 'RC.LOCAL', '/etc/rc.local', '#!/bin/sh -e\r\n#\r\n# rc.local\r\n#\r\n# This script is send by the MySQL DB for user ff:ff:ff:ff:ff:ff (all)\r\n\r\n_IP=$(hostname -I) || true\r\nif [ "$_IP" ]; then\r\n  printf "My IP address is %s\\n" "$_IP"\r\nfi\r\n\r\nprintf "\\n*********************************\\n---------------------------------\\nExecuting the configuration receiver.\\n\\n"\r\nphp -q /root/startup/1-start.php >> /root/startup/log.txt\r\nphp -q /root/startup/2-configure.php >> /root/startup/log.txt\r\n\r\necho "Initializing BCM" >> /root/startup/log.txt\r\n/root/files/jens/init > /root/startup/bcm.txt 2>&1 &\r\n\r\n\r\nif [ -c /dev/video0 ]; then\r\n	echo "Starting motion" >> /root/startup/log.txt\r\n	motion > /root/startup/motion.txt 2>&1 &\r\nelse\r\n	echo "Skipping motion, no camera connected" >> /root/startup/log.txt\r\nfi\r\n\r\nexit 0\r\n'),
('test', 'TEEST', '/etc/pweela', 'HOPPAAA'),
('test', 'CAMERA', '/etc/test', 'TEST CONTENT');

-- --------------------------------------------------------

--
-- Table structure for table `tbl_minfo`
--

CREATE TABLE IF NOT EXISTS `tbl_minfo` (
  `MAC` varchar(17) NOT NULL,
  `NAME` varchar(64) NOT NULL,
  `DESC` varchar(256) NOT NULL,
  `TYPE` varchar(512) NOT NULL,
  PRIMARY KEY (`MAC`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tbl_minfo`
--

INSERT INTO `tbl_minfo` (`MAC`, `NAME`, `DESC`, `TYPE`) VALUES
('b8:27:eb:0f:05:c4', 'Debug module Wesley', 'aaaaa', 'Camera+Alarm'),
('b8:27:eb:5c:5a:de', 'module-wesleypi2', 'This is a new module, rename it at the settings page.', 'NEW'),
('b8:27:eb:9d:e6:3a', 'Jelleeuh', 'Module van Jelle', 'Camera'),
('b8:27:eb:d5:dc:f0', 'Camera Jens', 'Deze camera staat in de centrale.', 'Camera+T-L-Sensor');

-- --------------------------------------------------------

--
-- Table structure for table `tbl_modules`
--

CREATE TABLE IF NOT EXISTS `tbl_modules` (
  `MAC` varchar(17) NOT NULL,
  `IP` varchar(15) NOT NULL,
  `HOSTNAME` text NOT NULL,
  `status` int(1) NOT NULL,
  `uptime` int(11) NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`MAC`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `tbl_modules`
--

INSERT INTO `tbl_modules` (`MAC`, `IP`, `HOSTNAME`, `status`, `uptime`, `last_update`) VALUES
('b8:27:eb:0f:05:c4', '10.0.3.228', 'module-wesley1', 1, 911, '2015-04-28 20:18:02'),
('b8:27:eb:5c:5a:de', '10.0.128.107', 'module-wesleypi2', 1, 936, '2015-04-28 20:18:01'),
('b8:27:eb:9d:e6:3a', '172.16.0.190', 'module-jelle', 0, 6, '2015-03-23 18:30:45'),
('b8:27:eb:d5:dc:f0', '10.0.3.238', 'module-jens', 1, 899, '2015-04-28 20:18:01');

-- --------------------------------------------------------

--
-- Table structure for table `tbl_sensordata`
--

CREATE TABLE IF NOT EXISTS `tbl_sensordata` (
  `sdata_id` int(11) NOT NULL AUTO_INCREMENT,
  `sdata_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `MAC` varchar(17) NOT NULL,
  `sensor_type` varchar(30) NOT NULL,
  `value` int(10) NOT NULL,
  PRIMARY KEY (`sdata_id`,`sdata_time`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1233 ;

--
-- Dumping data for table `tbl_sensordata`
--

INSERT INTO `tbl_sensordata` (`sdata_id`, `sdata_time`, `MAC`, `sensor_type`, `value`) VALUES
(55, '2015-04-23 17:32:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(56, '2015-04-23 17:32:06', 'b8:27:eb:0f:05:c4', 'light', 761),
(57, '2015-04-23 17:33:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(58, '2015-04-23 17:33:03', 'b8:27:eb:0f:05:c4', 'light', 756),
(59, '2015-04-23 17:34:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(60, '2015-04-23 17:34:05', 'b8:27:eb:0f:05:c4', 'light', 747),
(61, '2015-04-23 17:35:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(62, '2015-04-23 17:35:03', 'b8:27:eb:0f:05:c4', 'light', 507),
(63, '2015-04-23 17:36:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(64, '2015-04-23 17:36:05', 'b8:27:eb:0f:05:c4', 'light', 516),
(65, '2015-04-23 17:37:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(66, '2015-04-23 17:37:03', 'b8:27:eb:0f:05:c4', 'light', 524),
(67, '2015-04-23 17:38:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(68, '2015-04-23 17:38:06', 'b8:27:eb:0f:05:c4', 'light', 479),
(69, '2015-04-23 17:39:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(70, '2015-04-23 17:39:03', 'b8:27:eb:0f:05:c4', 'light', 463),
(71, '2015-04-23 17:40:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(72, '2015-04-23 17:40:05', 'b8:27:eb:0f:05:c4', 'light', 454),
(73, '2015-04-23 17:41:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(74, '2015-04-23 17:41:02', 'b8:27:eb:0f:05:c4', 'light', 465),
(75, '2015-04-23 17:42:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(76, '2015-04-23 17:42:06', 'b8:27:eb:0f:05:c4', 'light', 445),
(77, '2015-04-23 17:43:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(78, '2015-04-23 17:43:02', 'b8:27:eb:0f:05:c4', 'light', 444),
(79, '2015-04-23 17:44:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(80, '2015-04-23 17:44:06', 'b8:27:eb:0f:05:c4', 'light', 444),
(81, '2015-04-23 17:45:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(82, '2015-04-23 17:45:03', 'b8:27:eb:0f:05:c4', 'light', 439),
(83, '2015-04-23 17:46:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(84, '2015-04-23 17:46:05', 'b8:27:eb:0f:05:c4', 'light', 433),
(85, '2015-04-23 17:47:03', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(86, '2015-04-23 17:47:03', 'b8:27:eb:0f:05:c4', 'light', 446),
(87, '2015-04-23 17:48:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(88, '2015-04-23 17:48:05', 'b8:27:eb:0f:05:c4', 'light', 425),
(89, '2015-04-23 17:49:03', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(90, '2015-04-23 17:49:03', 'b8:27:eb:0f:05:c4', 'light', 417),
(91, '2015-04-23 17:50:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(92, '2015-04-23 17:50:05', 'b8:27:eb:0f:05:c4', 'light', 405),
(93, '2015-04-23 17:51:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(94, '2015-04-23 17:51:02', 'b8:27:eb:0f:05:c4', 'light', 404),
(95, '2015-04-23 17:52:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(96, '2015-04-23 17:52:06', 'b8:27:eb:0f:05:c4', 'light', 401),
(97, '2015-04-23 17:53:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(98, '2015-04-23 17:53:02', 'b8:27:eb:0f:05:c4', 'light', 401),
(99, '2015-04-23 17:54:06', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(100, '2015-04-23 17:54:06', 'b8:27:eb:0f:05:c4', 'light', 400),
(101, '2015-04-23 17:55:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(102, '2015-04-23 17:55:03', 'b8:27:eb:0f:05:c4', 'light', 392),
(103, '2015-04-23 17:56:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(104, '2015-04-23 17:56:05', 'b8:27:eb:0f:05:c4', 'light', 384),
(105, '2015-04-23 17:57:03', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(106, '2015-04-23 17:57:03', 'b8:27:eb:0f:05:c4', 'light', 379),
(107, '2015-04-23 17:58:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(108, '2015-04-23 17:58:05', 'b8:27:eb:0f:05:c4', 'light', 364),
(109, '2015-04-23 17:59:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(110, '2015-04-23 17:59:02', 'b8:27:eb:0f:05:c4', 'light', 358),
(111, '2015-04-23 18:00:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(112, '2015-04-23 18:00:06', 'b8:27:eb:0f:05:c4', 'light', 365),
(113, '2015-04-23 18:01:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(114, '2015-04-23 18:01:02', 'b8:27:eb:0f:05:c4', 'light', 352),
(115, '2015-04-23 18:02:06', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(116, '2015-04-23 18:02:06', 'b8:27:eb:0f:05:c4', 'light', 345),
(117, '2015-04-23 18:03:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(118, '2015-04-23 18:03:02', 'b8:27:eb:0f:05:c4', 'light', 344),
(119, '2015-04-23 18:04:06', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(120, '2015-04-23 18:04:06', 'b8:27:eb:0f:05:c4', 'light', 336),
(121, '2015-04-23 18:05:03', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(122, '2015-04-23 18:05:03', 'b8:27:eb:0f:05:c4', 'light', 341),
(123, '2015-04-23 18:06:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(124, '2015-04-23 18:06:05', 'b8:27:eb:0f:05:c4', 'light', 321),
(125, '2015-04-23 18:07:03', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(126, '2015-04-23 18:07:03', 'b8:27:eb:0f:05:c4', 'light', 315),
(127, '2015-04-23 18:08:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(128, '2015-04-23 18:08:05', 'b8:27:eb:0f:05:c4', 'light', 293),
(129, '2015-04-23 18:09:03', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(130, '2015-04-23 18:09:03', 'b8:27:eb:0f:05:c4', 'light', 290),
(131, '2015-04-23 18:10:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(132, '2015-04-23 18:10:05', 'b8:27:eb:0f:05:c4', 'light', 282),
(133, '2015-04-23 18:11:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(134, '2015-04-23 18:11:02', 'b8:27:eb:0f:05:c4', 'light', 453),
(135, '2015-04-23 18:12:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(136, '2015-04-23 18:12:06', 'b8:27:eb:0f:05:c4', 'light', 437),
(137, '2015-04-23 18:13:02', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(138, '2015-04-23 18:13:03', 'b8:27:eb:0f:05:c4', 'light', 421),
(139, '2015-04-23 18:14:06', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(140, '2015-04-23 18:14:06', 'b8:27:eb:0f:05:c4', 'light', 425),
(141, '2015-04-23 18:15:03', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(142, '2015-04-23 18:15:03', 'b8:27:eb:0f:05:c4', 'light', 407),
(143, '2015-04-23 18:16:05', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(144, '2015-04-23 18:16:05', 'b8:27:eb:0f:05:c4', 'light', 277),
(145, '2015-04-23 18:17:03', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(146, '2015-04-23 18:17:03', 'b8:27:eb:0f:05:c4', 'light', 264),
(147, '2015-04-23 18:18:05', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(148, '2015-04-23 18:18:06', 'b8:27:eb:0f:05:c4', 'light', 258),
(149, '2015-04-23 18:19:02', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(150, '2015-04-23 18:19:02', 'b8:27:eb:0f:05:c4', 'light', 252),
(151, '2015-04-23 18:20:06', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(152, '2015-04-23 18:20:06', 'b8:27:eb:0f:05:c4', 'light', 243),
(153, '2015-04-23 18:21:02', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(154, '2015-04-23 18:21:02', 'b8:27:eb:0f:05:c4', 'light', 233),
(155, '2015-04-23 18:22:06', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(156, '2015-04-23 18:22:06', 'b8:27:eb:0f:05:c4', 'light', 222),
(157, '2015-04-23 18:23:03', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(158, '2015-04-23 18:23:03', 'b8:27:eb:0f:05:c4', 'light', 211),
(159, '2015-04-23 18:24:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(160, '2015-04-23 18:24:05', 'b8:27:eb:0f:05:c4', 'light', 202),
(161, '2015-04-23 18:25:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(162, '2015-04-23 18:25:03', 'b8:27:eb:0f:05:c4', 'light', 203),
(163, '2015-04-23 18:26:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(164, '2015-04-23 18:26:06', 'b8:27:eb:0f:05:c4', 'light', 195),
(165, '2015-04-23 18:27:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(166, '2015-04-23 18:27:02', 'b8:27:eb:0f:05:c4', 'light', 185),
(167, '2015-04-23 18:28:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(168, '2015-04-23 18:28:06', 'b8:27:eb:0f:05:c4', 'light', 177),
(169, '2015-04-23 18:29:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(170, '2015-04-23 18:29:03', 'b8:27:eb:0f:05:c4', 'light', 169),
(171, '2015-04-23 18:30:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(172, '2015-04-23 18:30:05', 'b8:27:eb:0f:05:c4', 'light', 158),
(173, '2015-04-23 18:31:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(174, '2015-04-23 18:31:03', 'b8:27:eb:0f:05:c4', 'light', 146),
(175, '2015-04-23 18:32:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(176, '2015-04-23 18:32:05', 'b8:27:eb:0f:05:c4', 'light', 138),
(177, '2015-04-23 18:33:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(178, '2015-04-23 18:33:03', 'b8:27:eb:0f:05:c4', 'light', 131),
(179, '2015-04-23 18:34:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(180, '2015-04-23 18:34:06', 'b8:27:eb:0f:05:c4', 'light', 122),
(181, '2015-04-23 18:35:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(182, '2015-04-23 18:35:02', 'b8:27:eb:0f:05:c4', 'light', 122),
(183, '2015-04-23 18:36:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(184, '2015-04-23 18:36:06', 'b8:27:eb:0f:05:c4', 'light', 114),
(185, '2015-04-23 18:37:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(186, '2015-04-23 18:37:03', 'b8:27:eb:0f:05:c4', 'light', 106),
(187, '2015-04-23 18:38:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(188, '2015-04-23 18:38:06', 'b8:27:eb:0f:05:c4', 'light', 98),
(189, '2015-04-23 18:39:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(190, '2015-04-23 18:39:04', 'b8:27:eb:0f:05:c4', 'light', 91),
(191, '2015-04-23 18:40:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(192, '2015-04-23 18:40:06', 'b8:27:eb:0f:05:c4', 'light', 84),
(193, '2015-04-23 18:41:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(194, '2015-04-23 18:41:03', 'b8:27:eb:0f:05:c4', 'light', 78),
(195, '2015-04-23 18:42:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(196, '2015-04-23 18:42:05', 'b8:27:eb:0f:05:c4', 'light', 73),
(197, '2015-04-23 18:43:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(198, '2015-04-23 18:43:03', 'b8:27:eb:0f:05:c4', 'light', 67),
(199, '2015-04-23 18:44:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(200, '2015-04-23 18:44:05', 'b8:27:eb:0f:05:c4', 'light', 63),
(201, '2015-04-23 18:45:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(202, '2015-04-23 18:45:02', 'b8:27:eb:0f:05:c4', 'light', 58),
(203, '2015-04-23 18:46:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(204, '2015-04-23 18:46:06', 'b8:27:eb:0f:05:c4', 'light', 54),
(205, '2015-04-23 18:47:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(206, '2015-04-23 18:47:02', 'b8:27:eb:0f:05:c4', 'light', 51),
(207, '2015-04-23 18:48:06', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(208, '2015-04-23 18:48:06', 'b8:27:eb:0f:05:c4', 'light', 48),
(209, '2015-04-23 18:49:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(210, '2015-04-23 18:49:03', 'b8:27:eb:0f:05:c4', 'light', 41),
(211, '2015-04-23 18:50:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(212, '2015-04-23 18:50:05', 'b8:27:eb:0f:05:c4', 'light', 39),
(213, '2015-04-23 18:51:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(214, '2015-04-23 18:51:03', 'b8:27:eb:0f:05:c4', 'light', 37),
(215, '2015-04-23 18:52:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(216, '2015-04-23 18:52:05', 'b8:27:eb:0f:05:c4', 'light', 33),
(217, '2015-04-23 18:53:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(218, '2015-04-23 18:53:02', 'b8:27:eb:0f:05:c4', 'light', 30),
(219, '2015-04-23 18:54:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(220, '2015-04-23 18:54:06', 'b8:27:eb:0f:05:c4', 'light', 27),
(221, '2015-04-23 18:55:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(222, '2015-04-23 18:55:02', 'b8:27:eb:0f:05:c4', 'light', 25),
(223, '2015-04-23 18:56:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(224, '2015-04-23 18:56:06', 'b8:27:eb:0f:05:c4', 'light', 22),
(225, '2015-04-23 18:57:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(226, '2015-04-23 18:57:03', 'b8:27:eb:0f:05:c4', 'light', 22),
(227, '2015-04-23 18:58:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(228, '2015-04-23 18:58:05', 'b8:27:eb:0f:05:c4', 'light', 22),
(229, '2015-04-23 18:59:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(230, '2015-04-23 18:59:03', 'b8:27:eb:0f:05:c4', 'light', 19),
(231, '2015-04-23 19:00:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(232, '2015-04-23 19:00:05', 'b8:27:eb:0f:05:c4', 'light', 18),
(233, '2015-04-23 19:01:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(234, '2015-04-23 19:01:02', 'b8:27:eb:0f:05:c4', 'light', 17),
(235, '2015-04-23 19:02:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(236, '2015-04-23 19:02:06', 'b8:27:eb:0f:05:c4', 'light', 17),
(237, '2015-04-23 19:03:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(238, '2015-04-23 19:03:02', 'b8:27:eb:0f:05:c4', 'light', 13),
(239, '2015-04-23 19:04:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(240, '2015-04-23 19:04:06', 'b8:27:eb:0f:05:c4', 'light', 9),
(241, '2015-04-23 19:05:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(242, '2015-04-23 19:05:03', 'b8:27:eb:0f:05:c4', 'light', 9),
(243, '2015-04-23 19:06:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(244, '2015-04-23 19:06:05', 'b8:27:eb:0f:05:c4', 'light', 12),
(245, '2015-04-23 19:07:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(246, '2015-04-23 19:07:03', 'b8:27:eb:0f:05:c4', 'light', 11),
(247, '2015-04-23 19:08:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(248, '2015-04-23 19:08:06', 'b8:27:eb:0f:05:c4', 'light', 10),
(249, '2015-04-23 19:09:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(250, '2015-04-23 19:09:03', 'b8:27:eb:0f:05:c4', 'light', 9),
(251, '2015-04-23 19:10:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(252, '2015-04-23 19:10:06', 'b8:27:eb:0f:05:c4', 'light', 8),
(253, '2015-04-23 19:11:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(254, '2015-04-23 19:11:02', 'b8:27:eb:0f:05:c4', 'light', 8),
(255, '2015-04-23 19:12:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(256, '2015-04-23 19:12:06', 'b8:27:eb:0f:05:c4', 'light', 8),
(257, '2015-04-23 19:13:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(258, '2015-04-23 19:13:03', 'b8:27:eb:0f:05:c4', 'light', 7),
(259, '2015-04-23 19:14:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(260, '2015-04-23 19:14:05', 'b8:27:eb:0f:05:c4', 'light', 8),
(261, '2015-04-23 19:15:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(262, '2015-04-23 19:15:03', 'b8:27:eb:0f:05:c4', 'light', 7),
(263, '2015-04-23 19:16:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(264, '2015-04-23 19:16:05', 'b8:27:eb:0f:05:c4', 'light', 9),
(265, '2015-04-23 19:17:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(266, '2015-04-23 19:17:03', 'b8:27:eb:0f:05:c4', 'light', 10),
(267, '2015-04-23 19:18:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(268, '2015-04-23 19:18:06', 'b8:27:eb:0f:05:c4', 'light', 7),
(269, '2015-04-23 19:19:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(270, '2015-04-23 19:19:02', 'b8:27:eb:0f:05:c4', 'light', 9),
(271, '2015-04-23 19:20:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(272, '2015-04-23 19:20:06', 'b8:27:eb:0f:05:c4', 'light', 7),
(273, '2015-04-23 19:21:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(274, '2015-04-23 19:21:03', 'b8:27:eb:0f:05:c4', 'light', 6),
(275, '2015-04-23 19:22:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(276, '2015-04-23 19:22:06', 'b8:27:eb:0f:05:c4', 'light', 5),
(277, '2015-04-23 19:23:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(278, '2015-04-23 19:23:03', 'b8:27:eb:0f:05:c4', 'light', 7),
(279, '2015-04-23 19:24:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(280, '2015-04-23 19:24:05', 'b8:27:eb:0f:05:c4', 'light', 6),
(281, '2015-04-23 19:25:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(282, '2015-04-23 19:25:03', 'b8:27:eb:0f:05:c4', 'light', 51),
(283, '2015-04-23 19:26:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(284, '2015-04-23 19:26:05', 'b8:27:eb:0f:05:c4', 'light', 47),
(285, '2015-04-23 19:27:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(286, '2015-04-23 19:27:02', 'b8:27:eb:0f:05:c4', 'light', 49),
(287, '2015-04-23 19:28:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(288, '2015-04-23 19:28:06', 'b8:27:eb:0f:05:c4', 'light', 50),
(289, '2015-04-23 19:29:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(290, '2015-04-23 19:29:02', 'b8:27:eb:0f:05:c4', 'light', 50),
(291, '2015-04-23 19:30:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(292, '2015-04-23 19:30:06', 'b8:27:eb:0f:05:c4', 'light', 50),
(293, '2015-04-23 19:31:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(294, '2015-04-23 19:31:03', 'b8:27:eb:0f:05:c4', 'light', 50),
(295, '2015-04-23 19:32:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(296, '2015-04-23 19:32:05', 'b8:27:eb:0f:05:c4', 'light', 47),
(297, '2015-04-23 19:33:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(298, '2015-04-23 19:33:03', 'b8:27:eb:0f:05:c4', 'light', 46),
(299, '2015-04-23 19:34:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(300, '2015-04-23 19:34:05', 'b8:27:eb:0f:05:c4', 'light', 54),
(301, '2015-04-23 19:35:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(302, '2015-04-23 19:35:02', 'b8:27:eb:0f:05:c4', 'light', 55),
(303, '2015-04-23 19:36:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(304, '2015-04-23 19:36:06', 'b8:27:eb:0f:05:c4', 'light', 55),
(305, '2015-04-23 19:37:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(306, '2015-04-23 19:37:02', 'b8:27:eb:0f:05:c4', 'light', 56),
(307, '2015-04-23 19:38:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(308, '2015-04-23 19:38:06', 'b8:27:eb:0f:05:c4', 'light', 55),
(309, '2015-04-23 19:39:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(310, '2015-04-23 19:39:03', 'b8:27:eb:0f:05:c4', 'light', 53),
(311, '2015-04-23 19:40:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(312, '2015-04-23 19:40:06', 'b8:27:eb:0f:05:c4', 'light', 52),
(313, '2015-04-23 19:41:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(314, '2015-04-23 19:41:03', 'b8:27:eb:0f:05:c4', 'light', 52),
(315, '2015-04-23 19:42:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(316, '2015-04-23 19:42:05', 'b8:27:eb:0f:05:c4', 'light', 52),
(317, '2015-04-23 19:43:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(318, '2015-04-23 19:43:03', 'b8:27:eb:0f:05:c4', 'light', 58),
(319, '2015-04-23 19:44:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(320, '2015-04-23 19:44:05', 'b8:27:eb:0f:05:c4', 'light', 59),
(321, '2015-04-23 19:45:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(322, '2015-04-23 19:45:02', 'b8:27:eb:0f:05:c4', 'light', 58),
(323, '2015-04-23 19:46:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(324, '2015-04-23 19:46:06', 'b8:27:eb:0f:05:c4', 'light', 58),
(325, '2015-04-23 19:47:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(326, '2015-04-23 19:47:02', 'b8:27:eb:0f:05:c4', 'light', 59),
(327, '2015-04-23 19:48:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(328, '2015-04-23 19:48:06', 'b8:27:eb:0f:05:c4', 'light', 59),
(329, '2015-04-23 19:49:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(330, '2015-04-23 19:49:02', 'b8:27:eb:0f:05:c4', 'light', 59),
(331, '2015-04-23 19:50:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(332, '2015-04-23 19:50:06', 'b8:27:eb:0f:05:c4', 'light', 59),
(333, '2015-04-23 19:51:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(334, '2015-04-23 19:51:03', 'b8:27:eb:0f:05:c4', 'light', 63),
(335, '2015-04-23 19:52:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(336, '2015-04-23 19:52:05', 'b8:27:eb:0f:05:c4', 'light', 34),
(337, '2015-04-23 19:53:03', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(338, '2015-04-23 19:53:03', 'b8:27:eb:0f:05:c4', 'light', 28),
(339, '2015-04-23 19:54:05', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(340, '2015-04-23 19:54:05', 'b8:27:eb:0f:05:c4', 'light', 29),
(341, '2015-04-23 19:55:02', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(342, '2015-04-23 19:55:02', 'b8:27:eb:0f:05:c4', 'light', 30),
(343, '2015-04-23 19:56:05', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(344, '2015-04-23 19:56:06', 'b8:27:eb:0f:05:c4', 'light', 27),
(345, '2015-04-23 19:57:02', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(346, '2015-04-23 19:57:02', 'b8:27:eb:0f:05:c4', 'light', 30),
(347, '2015-04-23 19:58:06', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(348, '2015-04-23 19:58:06', 'b8:27:eb:0f:05:c4', 'light', 34),
(349, '2015-04-23 19:59:02', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(350, '2015-04-23 19:59:03', 'b8:27:eb:0f:05:c4', 'light', 33),
(351, '2015-04-23 20:00:05', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(352, '2015-04-23 20:00:05', 'b8:27:eb:0f:05:c4', 'light', 31),
(353, '2015-04-23 20:01:03', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(354, '2015-04-23 20:01:03', 'b8:27:eb:0f:05:c4', 'light', 35),
(355, '2015-04-23 20:02:05', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(356, '2015-04-23 20:02:05', 'b8:27:eb:0f:05:c4', 'light', 34),
(357, '2015-04-23 20:03:03', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(358, '2015-04-23 20:03:03', 'b8:27:eb:0f:05:c4', 'light', 35),
(359, '2015-04-23 20:04:05', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(360, '2015-04-23 20:04:05', 'b8:27:eb:0f:05:c4', 'light', 34),
(361, '2015-04-23 20:05:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(362, '2015-04-23 20:05:02', 'b8:27:eb:0f:05:c4', 'light', 36),
(363, '2015-04-23 20:06:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(364, '2015-04-23 20:06:06', 'b8:27:eb:0f:05:c4', 'light', 35),
(365, '2015-04-23 20:07:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(366, '2015-04-23 20:07:02', 'b8:27:eb:0f:05:c4', 'light', 34),
(367, '2015-04-23 20:08:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(368, '2015-04-23 20:08:06', 'b8:27:eb:0f:05:c4', 'light', 35),
(369, '2015-04-23 20:09:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(370, '2015-04-23 20:09:03', 'b8:27:eb:0f:05:c4', 'light', 34),
(371, '2015-04-23 20:10:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(372, '2015-04-23 20:10:06', 'b8:27:eb:0f:05:c4', 'light', 34),
(373, '2015-04-23 20:11:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(374, '2015-04-23 20:11:02', 'b8:27:eb:0f:05:c4', 'light', 34),
(375, '2015-04-23 20:12:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(376, '2015-04-23 20:12:06', 'b8:27:eb:0f:05:c4', 'light', 28),
(377, '2015-04-23 20:13:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(378, '2015-04-23 20:13:03', 'b8:27:eb:0f:05:c4', 'light', 27),
(379, '2015-04-23 20:14:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(380, '2015-04-23 20:14:05', 'b8:27:eb:0f:05:c4', 'light', 27),
(381, '2015-04-23 20:15:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(382, '2015-04-23 20:15:03', 'b8:27:eb:0f:05:c4', 'light', 26),
(383, '2015-04-23 20:16:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(384, '2015-04-23 20:16:05', 'b8:27:eb:0f:05:c4', 'light', 25),
(385, '2015-04-23 20:17:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(386, '2015-04-23 20:17:02', 'b8:27:eb:0f:05:c4', 'light', 29),
(387, '2015-04-23 20:18:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(388, '2015-04-23 20:18:06', 'b8:27:eb:0f:05:c4', 'light', 27),
(389, '2015-04-23 20:19:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(390, '2015-04-23 20:19:02', 'b8:27:eb:0f:05:c4', 'light', 25),
(391, '2015-04-23 20:20:06', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(392, '2015-04-23 20:20:06', 'b8:27:eb:0f:05:c4', 'light', 31),
(393, '2015-04-23 20:21:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(394, '2015-04-23 20:21:03', 'b8:27:eb:0f:05:c4', 'light', 31),
(395, '2015-04-23 20:22:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(396, '2015-04-23 20:22:05', 'b8:27:eb:0f:05:c4', 'light', 29),
(397, '2015-04-23 20:23:03', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(398, '2015-04-23 20:23:03', 'b8:27:eb:0f:05:c4', 'light', 28),
(399, '2015-04-23 20:24:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(400, '2015-04-23 20:24:05', 'b8:27:eb:0f:05:c4', 'light', 31),
(401, '2015-04-23 20:25:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(402, '2015-04-23 20:25:02', 'b8:27:eb:0f:05:c4', 'light', 31),
(403, '2015-04-23 20:26:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(404, '2015-04-23 20:26:06', 'b8:27:eb:0f:05:c4', 'light', 32),
(405, '2015-04-23 20:27:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(406, '2015-04-23 20:27:02', 'b8:27:eb:0f:05:c4', 'light', 32),
(407, '2015-04-23 20:28:06', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(408, '2015-04-23 20:28:06', 'b8:27:eb:0f:05:c4', 'light', 31),
(409, '2015-04-23 20:29:02', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(410, '2015-04-23 20:29:03', 'b8:27:eb:0f:05:c4', 'light', 30),
(411, '2015-04-23 20:30:05', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(412, '2015-04-23 20:30:05', 'b8:27:eb:0f:05:c4', 'light', 30),
(413, '2015-04-23 20:31:03', 'b8:27:eb:0f:05:c4', 'temperature', 33),
(414, '2015-04-23 20:31:03', 'b8:27:eb:0f:05:c4', 'light', 34),
(415, '2015-04-23 20:32:05', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(416, '2015-04-23 20:32:05', 'b8:27:eb:0f:05:c4', 'light', 35),
(417, '2015-04-23 20:33:02', 'b8:27:eb:0f:05:c4', 'temperature', 32),
(418, '2015-04-23 20:33:02', 'b8:27:eb:0f:05:c4', 'light', 35),
(419, '2015-04-23 20:34:05', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(420, '2015-04-23 20:34:06', 'b8:27:eb:0f:05:c4', 'light', 78),
(421, '2015-04-23 20:35:02', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(422, '2015-04-23 20:35:02', 'b8:27:eb:0f:05:c4', 'light', 97),
(423, '2015-04-23 20:36:06', 'b8:27:eb:0f:05:c4', 'temperature', 31),
(424, '2015-04-23 20:36:06', 'b8:27:eb:0f:05:c4', 'light', 98),
(425, '2015-04-23 20:37:02', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(426, '2015-04-23 20:37:03', 'b8:27:eb:0f:05:c4', 'light', 101),
(427, '2015-04-23 20:38:05', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(428, '2015-04-23 20:38:05', 'b8:27:eb:0f:05:c4', 'light', 102),
(429, '2015-04-23 20:39:03', 'b8:27:eb:0f:05:c4', 'temperature', 30),
(430, '2015-04-23 20:39:04', 'b8:27:eb:0f:05:c4', 'light', 101),
(431, '2015-04-23 20:40:06', 'b8:27:eb:0f:05:c4', 'temperature', 29),
(432, '2015-04-23 20:40:06', 'b8:27:eb:0f:05:c4', 'light', 62),
(433, '2015-04-23 20:41:03', 'b8:27:eb:0f:05:c4', 'temperature', 29),
(434, '2015-04-23 20:41:03', 'b8:27:eb:0f:05:c4', 'light', 101),
(435, '2015-04-23 20:42:05', 'b8:27:eb:0f:05:c4', 'temperature', 29),
(436, '2015-04-23 20:42:05', 'b8:27:eb:0f:05:c4', 'light', 100),
(437, '2015-04-23 20:43:02', 'b8:27:eb:0f:05:c4', 'temperature', 29),
(438, '2015-04-23 20:43:02', 'b8:27:eb:0f:05:c4', 'light', 96),
(439, '2015-04-23 20:44:05', 'b8:27:eb:0f:05:c4', 'temperature', 29),
(440, '2015-04-23 20:44:06', 'b8:27:eb:0f:05:c4', 'light', 99),
(441, '2015-04-23 20:45:02', 'b8:27:eb:0f:05:c4', 'temperature', 29),
(442, '2015-04-23 20:45:02', 'b8:27:eb:0f:05:c4', 'light', 98),
(443, '2015-04-25 19:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(444, '2015-04-25 19:25:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(445, '2015-04-25 19:25:19', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(446, '2015-04-25 19:25:19', 'b8:27:eb:d5:dc:f0', 'light', 0),
(447, '2015-04-25 19:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(448, '2015-04-25 19:30:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(449, '2015-04-25 19:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(450, '2015-04-25 19:35:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(451, '2015-04-25 19:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(452, '2015-04-25 19:40:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(453, '2015-04-25 19:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(454, '2015-04-25 19:45:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(455, '2015-04-25 19:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(456, '2015-04-25 19:55:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(457, '2015-04-25 20:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(458, '2015-04-25 20:05:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(459, '2015-04-25 20:15:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(460, '2015-04-25 20:15:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(461, '2015-04-25 20:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(462, '2015-04-25 20:25:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(463, '2015-04-25 20:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(464, '2015-04-25 20:35:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(465, '2015-04-25 20:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(466, '2015-04-25 20:45:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(467, '2015-04-25 20:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(468, '2015-04-25 20:55:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(469, '2015-04-25 21:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(470, '2015-04-25 21:05:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(471, '2015-04-25 21:15:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(472, '2015-04-25 21:15:02', 'b8:27:eb:d5:dc:f0', 'light', 1),
(473, '2015-04-25 21:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(474, '2015-04-25 21:20:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(475, '2015-04-25 21:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(476, '2015-04-25 21:25:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(477, '2015-04-25 21:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(478, '2015-04-25 21:30:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(479, '2015-04-25 21:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(480, '2015-04-25 21:35:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(481, '2015-04-25 21:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(482, '2015-04-25 21:40:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(483, '2015-04-25 21:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(484, '2015-04-25 21:45:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(485, '2015-04-25 21:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(486, '2015-04-25 21:50:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(487, '2015-04-25 21:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(488, '2015-04-25 21:55:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(489, '2015-04-25 22:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(490, '2015-04-25 22:00:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(491, '2015-04-25 22:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(492, '2015-04-25 22:05:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(493, '2015-04-25 22:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(494, '2015-04-25 22:10:02', 'b8:27:eb:d5:dc:f0', 'light', 46),
(495, '2015-04-25 22:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(496, '2015-04-25 22:15:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(497, '2015-04-25 22:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(498, '2015-04-25 22:20:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(499, '2015-04-25 22:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(500, '2015-04-25 22:25:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(501, '2015-04-25 22:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(502, '2015-04-25 22:30:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(503, '2015-04-25 22:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(504, '2015-04-25 22:35:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(505, '2015-04-25 22:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(506, '2015-04-25 22:40:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(507, '2015-04-25 22:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(508, '2015-04-25 22:45:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(509, '2015-04-25 22:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(510, '2015-04-25 22:50:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(511, '2015-04-25 22:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(512, '2015-04-25 22:55:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(513, '2015-04-25 23:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(514, '2015-04-25 23:00:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(515, '2015-04-25 23:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(516, '2015-04-25 23:05:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(517, '2015-04-25 23:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(518, '2015-04-25 23:10:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(519, '2015-04-25 23:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(520, '2015-04-25 23:15:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(521, '2015-04-25 23:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(522, '2015-04-25 23:20:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(523, '2015-04-25 23:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(524, '2015-04-25 23:25:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(525, '2015-04-25 23:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(526, '2015-04-25 23:30:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(527, '2015-04-25 23:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(528, '2015-04-25 23:35:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(529, '2015-04-25 23:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(530, '2015-04-25 23:40:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(531, '2015-04-25 23:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(532, '2015-04-25 23:45:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(533, '2015-04-25 23:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(534, '2015-04-25 23:50:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(535, '2015-04-25 23:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(536, '2015-04-25 23:55:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(537, '2015-04-26 00:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(538, '2015-04-26 00:00:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(539, '2015-04-26 00:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(540, '2015-04-26 00:05:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(541, '2015-04-26 00:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(542, '2015-04-26 00:10:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(543, '2015-04-26 00:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(544, '2015-04-26 00:15:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(545, '2015-04-26 00:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(546, '2015-04-26 00:20:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(547, '2015-04-26 00:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(548, '2015-04-26 00:25:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(549, '2015-04-26 00:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(550, '2015-04-26 00:30:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(551, '2015-04-26 00:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(552, '2015-04-26 00:35:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(553, '2015-04-26 00:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(554, '2015-04-26 00:40:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(555, '2015-04-26 00:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(556, '2015-04-26 00:45:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(557, '2015-04-26 00:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(558, '2015-04-26 00:50:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(559, '2015-04-26 00:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(560, '2015-04-26 00:55:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(561, '2015-04-26 01:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(562, '2015-04-26 01:00:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(563, '2015-04-26 01:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(564, '2015-04-26 01:05:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(565, '2015-04-26 01:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(566, '2015-04-26 01:10:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(567, '2015-04-26 01:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(568, '2015-04-26 01:15:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(569, '2015-04-26 01:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(570, '2015-04-26 01:20:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(571, '2015-04-26 01:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(572, '2015-04-26 01:25:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(573, '2015-04-26 01:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(574, '2015-04-26 01:30:02', 'b8:27:eb:d5:dc:f0', 'light', 1),
(575, '2015-04-26 01:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(576, '2015-04-26 01:35:01', 'b8:27:eb:d5:dc:f0', 'light', 1),
(577, '2015-04-26 01:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(578, '2015-04-26 01:40:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(579, '2015-04-26 01:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(580, '2015-04-26 01:45:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(581, '2015-04-26 01:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(582, '2015-04-26 01:50:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(583, '2015-04-26 01:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(584, '2015-04-26 01:55:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(585, '2015-04-26 02:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(586, '2015-04-26 02:00:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(587, '2015-04-26 02:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(588, '2015-04-26 02:05:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(589, '2015-04-26 02:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(590, '2015-04-26 02:10:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(591, '2015-04-26 02:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(592, '2015-04-26 02:15:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(593, '2015-04-26 02:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(594, '2015-04-26 02:20:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(595, '2015-04-26 02:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(596, '2015-04-26 02:25:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(597, '2015-04-26 02:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(598, '2015-04-26 02:30:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(599, '2015-04-26 02:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(600, '2015-04-26 02:35:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(601, '2015-04-26 02:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(602, '2015-04-26 02:40:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(603, '2015-04-26 02:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(604, '2015-04-26 02:45:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(605, '2015-04-26 02:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(606, '2015-04-26 02:50:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(607, '2015-04-26 02:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(608, '2015-04-26 02:55:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(609, '2015-04-26 03:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(610, '2015-04-26 03:00:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(611, '2015-04-26 03:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(612, '2015-04-26 03:05:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(613, '2015-04-26 03:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(614, '2015-04-26 03:10:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(615, '2015-04-26 03:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(616, '2015-04-26 03:15:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(617, '2015-04-26 03:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(618, '2015-04-26 03:20:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(619, '2015-04-26 03:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(620, '2015-04-26 03:25:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(621, '2015-04-26 03:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(622, '2015-04-26 03:30:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(623, '2015-04-26 03:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(624, '2015-04-26 03:35:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(625, '2015-04-26 03:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(626, '2015-04-26 03:40:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(627, '2015-04-26 03:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(628, '2015-04-26 03:45:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(629, '2015-04-26 03:50:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(630, '2015-04-26 03:50:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(631, '2015-04-26 03:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(632, '2015-04-26 03:55:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(633, '2015-04-26 04:00:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(634, '2015-04-26 04:00:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(635, '2015-04-26 04:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(636, '2015-04-26 04:05:01', 'b8:27:eb:d5:dc:f0', 'light', 1),
(637, '2015-04-26 04:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(638, '2015-04-26 04:10:01', 'b8:27:eb:d5:dc:f0', 'light', 2),
(639, '2015-04-26 04:15:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(640, '2015-04-26 04:15:02', 'b8:27:eb:d5:dc:f0', 'light', 2),
(641, '2015-04-26 04:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(642, '2015-04-26 04:20:02', 'b8:27:eb:d5:dc:f0', 'light', 3),
(643, '2015-04-26 04:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(644, '2015-04-26 04:25:01', 'b8:27:eb:d5:dc:f0', 'light', 6),
(645, '2015-04-26 04:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(646, '2015-04-26 04:30:01', 'b8:27:eb:d5:dc:f0', 'light', 14),
(647, '2015-04-26 04:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(648, '2015-04-26 04:35:02', 'b8:27:eb:d5:dc:f0', 'light', 26),
(649, '2015-04-26 04:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(650, '2015-04-26 04:40:02', 'b8:27:eb:d5:dc:f0', 'light', 36),
(651, '2015-04-26 04:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(652, '2015-04-26 04:45:02', 'b8:27:eb:d5:dc:f0', 'light', 52),
(653, '2015-04-26 04:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(654, '2015-04-26 04:50:01', 'b8:27:eb:d5:dc:f0', 'light', 68),
(655, '2015-04-26 04:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(656, '2015-04-26 04:55:02', 'b8:27:eb:d5:dc:f0', 'light', 79),
(657, '2015-04-26 05:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(658, '2015-04-26 05:00:02', 'b8:27:eb:d5:dc:f0', 'light', 90),
(659, '2015-04-26 05:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(660, '2015-04-26 05:05:01', 'b8:27:eb:d5:dc:f0', 'light', 96),
(661, '2015-04-26 05:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(662, '2015-04-26 05:10:02', 'b8:27:eb:d5:dc:f0', 'light', 105),
(663, '2015-04-26 05:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(664, '2015-04-26 05:15:02', 'b8:27:eb:d5:dc:f0', 'light', 116),
(665, '2015-04-26 05:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(666, '2015-04-26 05:20:01', 'b8:27:eb:d5:dc:f0', 'light', 111),
(667, '2015-04-26 05:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(668, '2015-04-26 05:25:02', 'b8:27:eb:d5:dc:f0', 'light', 126),
(669, '2015-04-26 05:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(670, '2015-04-26 05:30:01', 'b8:27:eb:d5:dc:f0', 'light', 100),
(671, '2015-04-26 05:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(672, '2015-04-26 05:35:02', 'b8:27:eb:d5:dc:f0', 'light', 119),
(673, '2015-04-26 05:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(674, '2015-04-26 05:40:01', 'b8:27:eb:d5:dc:f0', 'light', 140),
(675, '2015-04-26 05:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(676, '2015-04-26 05:45:02', 'b8:27:eb:d5:dc:f0', 'light', 157),
(677, '2015-04-26 05:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(678, '2015-04-26 05:50:02', 'b8:27:eb:d5:dc:f0', 'light', 183),
(679, '2015-04-26 05:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(680, '2015-04-26 05:55:02', 'b8:27:eb:d5:dc:f0', 'light', 169),
(681, '2015-04-26 06:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(682, '2015-04-26 06:00:01', 'b8:27:eb:d5:dc:f0', 'light', 134),
(683, '2015-04-26 06:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(684, '2015-04-26 06:05:02', 'b8:27:eb:d5:dc:f0', 'light', 183),
(685, '2015-04-26 06:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(686, '2015-04-26 06:10:02', 'b8:27:eb:d5:dc:f0', 'light', 181),
(687, '2015-04-26 06:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(688, '2015-04-26 06:15:01', 'b8:27:eb:d5:dc:f0', 'light', 208),
(689, '2015-04-26 06:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(690, '2015-04-26 06:20:02', 'b8:27:eb:d5:dc:f0', 'light', 236),
(691, '2015-04-26 06:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(692, '2015-04-26 06:25:01', 'b8:27:eb:d5:dc:f0', 'light', 280),
(693, '2015-04-26 06:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(694, '2015-04-26 06:30:02', 'b8:27:eb:d5:dc:f0', 'light', 329),
(695, '2015-04-26 06:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(696, '2015-04-26 06:35:02', 'b8:27:eb:d5:dc:f0', 'light', 427),
(697, '2015-04-26 06:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(698, '2015-04-26 06:40:01', 'b8:27:eb:d5:dc:f0', 'light', 436),
(699, '2015-04-26 06:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(700, '2015-04-26 06:45:02', 'b8:27:eb:d5:dc:f0', 'light', 456),
(701, '2015-04-26 06:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(702, '2015-04-26 06:50:01', 'b8:27:eb:d5:dc:f0', 'light', 422),
(703, '2015-04-26 06:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(704, '2015-04-26 06:55:02', 'b8:27:eb:d5:dc:f0', 'light', 429),
(705, '2015-04-26 07:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(706, '2015-04-26 07:00:02', 'b8:27:eb:d5:dc:f0', 'light', 535),
(707, '2015-04-26 07:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(708, '2015-04-26 07:05:01', 'b8:27:eb:d5:dc:f0', 'light', 549),
(709, '2015-04-26 07:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(710, '2015-04-26 07:10:02', 'b8:27:eb:d5:dc:f0', 'light', 553),
(711, '2015-04-26 07:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(712, '2015-04-26 07:15:01', 'b8:27:eb:d5:dc:f0', 'light', 489),
(713, '2015-04-26 07:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(714, '2015-04-26 07:20:02', 'b8:27:eb:d5:dc:f0', 'light', 577),
(715, '2015-04-26 07:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(716, '2015-04-26 07:25:01', 'b8:27:eb:d5:dc:f0', 'light', 497),
(717, '2015-04-26 07:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(718, '2015-04-26 07:30:02', 'b8:27:eb:d5:dc:f0', 'light', 562),
(719, '2015-04-26 07:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(720, '2015-04-26 07:35:01', 'b8:27:eb:d5:dc:f0', 'light', 569),
(721, '2015-04-26 07:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(722, '2015-04-26 07:40:01', 'b8:27:eb:d5:dc:f0', 'light', 633),
(723, '2015-04-26 07:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(724, '2015-04-26 07:45:02', 'b8:27:eb:d5:dc:f0', 'light', 625),
(725, '2015-04-26 07:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(726, '2015-04-26 07:50:01', 'b8:27:eb:d5:dc:f0', 'light', 551),
(727, '2015-04-26 07:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(728, '2015-04-26 07:55:02', 'b8:27:eb:d5:dc:f0', 'light', 517),
(729, '2015-04-26 08:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(730, '2015-04-26 08:00:01', 'b8:27:eb:d5:dc:f0', 'light', 598),
(731, '2015-04-26 08:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(732, '2015-04-26 08:05:02', 'b8:27:eb:d5:dc:f0', 'light', 619),
(733, '2015-04-26 08:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(734, '2015-04-26 08:10:02', 'b8:27:eb:d5:dc:f0', 'light', 681),
(735, '2015-04-26 08:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(736, '2015-04-26 08:15:01', 'b8:27:eb:d5:dc:f0', 'light', 689),
(737, '2015-04-26 08:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(738, '2015-04-26 08:20:02', 'b8:27:eb:d5:dc:f0', 'light', 624),
(739, '2015-04-26 08:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(740, '2015-04-26 08:25:02', 'b8:27:eb:d5:dc:f0', 'light', 545),
(741, '2015-04-26 08:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(742, '2015-04-26 08:30:01', 'b8:27:eb:d5:dc:f0', 'light', 667),
(743, '2015-04-26 08:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(744, '2015-04-26 08:35:02', 'b8:27:eb:d5:dc:f0', 'light', 601),
(745, '2015-04-26 08:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(746, '2015-04-26 08:40:02', 'b8:27:eb:d5:dc:f0', 'light', 751),
(747, '2015-04-26 08:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(748, '2015-04-26 08:45:01', 'b8:27:eb:d5:dc:f0', 'light', 566),
(749, '2015-04-26 08:50:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(750, '2015-04-26 08:50:02', 'b8:27:eb:d5:dc:f0', 'light', 523),
(751, '2015-04-26 08:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(752, '2015-04-26 08:55:02', 'b8:27:eb:d5:dc:f0', 'light', 492),
(753, '2015-04-26 09:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(754, '2015-04-26 09:00:01', 'b8:27:eb:d5:dc:f0', 'light', 624),
(755, '2015-04-26 09:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(756, '2015-04-26 09:05:02', 'b8:27:eb:d5:dc:f0', 'light', 732),
(757, '2015-04-26 09:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(758, '2015-04-26 09:10:02', 'b8:27:eb:d5:dc:f0', 'light', 767),
(759, '2015-04-26 09:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(760, '2015-04-26 09:15:01', 'b8:27:eb:d5:dc:f0', 'light', 720),
(761, '2015-04-26 09:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(762, '2015-04-26 09:20:02', 'b8:27:eb:d5:dc:f0', 'light', 814),
(763, '2015-04-26 09:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(764, '2015-04-26 09:25:01', 'b8:27:eb:d5:dc:f0', 'light', 795),
(765, '2015-04-26 09:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(766, '2015-04-26 09:30:02', 'b8:27:eb:d5:dc:f0', 'light', 707),
(767, '2015-04-26 09:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(768, '2015-04-26 09:35:02', 'b8:27:eb:d5:dc:f0', 'light', 769),
(769, '2015-04-26 09:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(770, '2015-04-26 09:40:02', 'b8:27:eb:d5:dc:f0', 'light', 822),
(771, '2015-04-26 09:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(772, '2015-04-26 09:45:02', 'b8:27:eb:d5:dc:f0', 'light', 705),
(773, '2015-04-26 09:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(774, '2015-04-26 09:50:02', 'b8:27:eb:d5:dc:f0', 'light', 609),
(775, '2015-04-26 09:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(776, '2015-04-26 09:55:01', 'b8:27:eb:d5:dc:f0', 'light', 763),
(777, '2015-04-26 10:00:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(778, '2015-04-26 10:00:02', 'b8:27:eb:d5:dc:f0', 'light', 841),
(779, '2015-04-26 10:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(780, '2015-04-26 10:05:02', 'b8:27:eb:d5:dc:f0', 'light', 824),
(781, '2015-04-26 10:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(782, '2015-04-26 10:10:02', 'b8:27:eb:d5:dc:f0', 'light', 591),
(783, '2015-04-26 10:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(784, '2015-04-26 10:15:01', 'b8:27:eb:d5:dc:f0', 'light', 361),
(785, '2015-04-26 10:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(786, '2015-04-26 10:20:02', 'b8:27:eb:d5:dc:f0', 'light', 282),
(787, '2015-04-26 10:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(788, '2015-04-26 10:25:01', 'b8:27:eb:d5:dc:f0', 'light', 533),
(789, '2015-04-26 10:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(790, '2015-04-26 10:30:02', 'b8:27:eb:d5:dc:f0', 'light', 477),
(791, '2015-04-26 10:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(792, '2015-04-26 10:35:02', 'b8:27:eb:d5:dc:f0', 'light', 481),
(793, '2015-04-26 10:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(794, '2015-04-26 10:45:02', 'b8:27:eb:d5:dc:f0', 'light', 1030),
(795, '2015-04-26 10:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(796, '2015-04-26 10:55:02', 'b8:27:eb:d5:dc:f0', 'light', 1131),
(797, '2015-04-26 11:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(798, '2015-04-26 11:05:01', 'b8:27:eb:d5:dc:f0', 'light', 606),
(799, '2015-04-26 11:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(800, '2015-04-26 11:15:02', 'b8:27:eb:d5:dc:f0', 'light', 441),
(801, '2015-04-26 11:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(802, '2015-04-26 11:25:01', 'b8:27:eb:d5:dc:f0', 'light', 581),
(803, '2015-04-26 11:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(804, '2015-04-26 11:35:02', 'b8:27:eb:d5:dc:f0', 'light', 1134),
(805, '2015-04-26 11:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(806, '2015-04-26 11:45:02', 'b8:27:eb:d5:dc:f0', 'light', 688),
(807, '2015-04-26 11:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(808, '2015-04-26 11:55:02', 'b8:27:eb:d5:dc:f0', 'light', 332),
(809, '2015-04-26 12:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(810, '2015-04-26 12:05:01', 'b8:27:eb:d5:dc:f0', 'light', 349),
(811, '2015-04-26 12:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(812, '2015-04-26 12:15:01', 'b8:27:eb:d5:dc:f0', 'light', 302),
(813, '2015-04-26 12:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(814, '2015-04-26 12:25:01', 'b8:27:eb:d5:dc:f0', 'light', 285),
(815, '2015-04-26 12:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(816, '2015-04-26 12:35:02', 'b8:27:eb:d5:dc:f0', 'light', 605),
(817, '2015-04-26 12:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(818, '2015-04-26 12:45:02', 'b8:27:eb:d5:dc:f0', 'light', 711),
(819, '2015-04-26 12:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(820, '2015-04-26 12:55:01', 'b8:27:eb:d5:dc:f0', 'light', 698),
(821, '2015-04-26 13:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32);
INSERT INTO `tbl_sensordata` (`sdata_id`, `sdata_time`, `MAC`, `sensor_type`, `value`) VALUES
(822, '2015-04-26 13:05:02', 'b8:27:eb:d5:dc:f0', 'light', 1160),
(823, '2015-04-26 13:15:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(824, '2015-04-26 13:15:02', 'b8:27:eb:d5:dc:f0', 'light', 1069),
(825, '2015-04-26 13:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(826, '2015-04-26 13:20:02', 'b8:27:eb:d5:dc:f0', 'light', 1031),
(827, '2015-04-26 13:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(828, '2015-04-26 13:30:01', 'b8:27:eb:d5:dc:f0', 'light', 776),
(829, '2015-04-26 13:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(830, '2015-04-26 13:55:02', 'b8:27:eb:d5:dc:f0', 'light', 592),
(831, '2015-04-26 14:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(832, '2015-04-26 14:25:01', 'b8:27:eb:d5:dc:f0', 'light', 422),
(833, '2015-04-26 14:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(834, '2015-04-26 14:35:02', 'b8:27:eb:d5:dc:f0', 'light', 434),
(835, '2015-04-26 14:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(836, '2015-04-26 14:45:01', 'b8:27:eb:d5:dc:f0', 'light', 481),
(837, '2015-04-26 14:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(838, '2015-04-26 14:55:01', 'b8:27:eb:d5:dc:f0', 'light', 513),
(839, '2015-04-26 15:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(840, '2015-04-26 15:00:01', 'b8:27:eb:d5:dc:f0', 'light', 400),
(841, '2015-04-26 15:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(842, '2015-04-26 15:10:02', 'b8:27:eb:d5:dc:f0', 'light', 276),
(843, '2015-04-26 15:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(844, '2015-04-26 15:20:02', 'b8:27:eb:d5:dc:f0', 'light', 110),
(845, '2015-04-26 15:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(846, '2015-04-26 15:30:02', 'b8:27:eb:d5:dc:f0', 'light', 32),
(847, '2015-04-26 16:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(848, '2015-04-26 16:00:01', 'b8:27:eb:d5:dc:f0', 'light', 770),
(849, '2015-04-26 16:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(850, '2015-04-26 16:10:02', 'b8:27:eb:d5:dc:f0', 'light', 1243),
(851, '2015-04-26 16:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(852, '2015-04-26 16:20:01', 'b8:27:eb:d5:dc:f0', 'light', 1284),
(853, '2015-04-26 16:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(854, '2015-04-26 16:30:01', 'b8:27:eb:d5:dc:f0', 'light', 1517),
(855, '2015-04-26 16:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(856, '2015-04-26 16:40:02', 'b8:27:eb:d5:dc:f0', 'light', 1641),
(857, '2015-04-26 16:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(858, '2015-04-26 16:55:01', 'b8:27:eb:d5:dc:f0', 'light', 640),
(859, '2015-04-26 17:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(860, '2015-04-26 17:05:02', 'b8:27:eb:d5:dc:f0', 'light', 612),
(861, '2015-04-26 17:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(862, '2015-04-26 17:15:01', 'b8:27:eb:d5:dc:f0', 'light', 655),
(863, '2015-04-26 17:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(864, '2015-04-26 17:25:01', 'b8:27:eb:d5:dc:f0', 'light', 441),
(865, '2015-04-26 17:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(866, '2015-04-26 17:35:02', 'b8:27:eb:d5:dc:f0', 'light', 377),
(867, '2015-04-26 17:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(868, '2015-04-26 17:45:01', 'b8:27:eb:d5:dc:f0', 'light', 326),
(869, '2015-04-26 17:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(870, '2015-04-26 17:55:01', 'b8:27:eb:d5:dc:f0', 'light', 336),
(871, '2015-04-26 18:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(872, '2015-04-26 18:05:01', 'b8:27:eb:d5:dc:f0', 'light', 192),
(873, '2015-04-26 18:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(874, '2015-04-26 18:30:02', 'b8:27:eb:d5:dc:f0', 'light', 66),
(875, '2015-04-26 18:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(876, '2015-04-26 18:40:01', 'b8:27:eb:d5:dc:f0', 'light', 50),
(877, '2015-04-26 18:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(878, '2015-04-26 18:50:01', 'b8:27:eb:d5:dc:f0', 'light', 37),
(879, '2015-04-26 19:00:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(880, '2015-04-26 19:00:02', 'b8:27:eb:d5:dc:f0', 'light', 16),
(881, '2015-04-26 19:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(882, '2015-04-26 19:10:02', 'b8:27:eb:d5:dc:f0', 'light', 9),
(883, '2015-04-26 19:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(884, '2015-04-26 19:20:02', 'b8:27:eb:d5:dc:f0', 'light', 6),
(885, '2015-04-26 19:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(886, '2015-04-26 19:30:01', 'b8:27:eb:d5:dc:f0', 'light', 6),
(887, '2015-04-26 19:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(888, '2015-04-26 19:40:02', 'b8:27:eb:d5:dc:f0', 'light', 4),
(889, '2015-04-26 19:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(890, '2015-04-26 19:50:02', 'b8:27:eb:d5:dc:f0', 'light', 4),
(891, '2015-04-26 20:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(892, '2015-04-26 20:00:02', 'b8:27:eb:d5:dc:f0', 'light', 4),
(893, '2015-04-26 20:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(894, '2015-04-26 20:10:02', 'b8:27:eb:d5:dc:f0', 'light', 4),
(895, '2015-04-26 20:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(896, '2015-04-26 20:20:01', 'b8:27:eb:d5:dc:f0', 'light', 4),
(897, '2015-04-26 20:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(898, '2015-04-26 20:30:02', 'b8:27:eb:d5:dc:f0', 'light', 4),
(899, '2015-04-26 20:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(900, '2015-04-26 20:40:02', 'b8:27:eb:d5:dc:f0', 'light', 4),
(901, '2015-04-26 20:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(902, '2015-04-26 20:50:01', 'b8:27:eb:d5:dc:f0', 'light', 5),
(903, '2015-04-27 07:07:24', 'b8:27:eb:d5:dc:f0', 'temperature', 23),
(904, '2015-04-27 07:07:24', 'b8:27:eb:d5:dc:f0', 'light', 2752),
(905, '2015-04-27 07:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 24),
(906, '2015-04-27 07:10:01', 'b8:27:eb:d5:dc:f0', 'light', 2390),
(907, '2015-04-27 07:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 26),
(908, '2015-04-27 07:15:01', 'b8:27:eb:d5:dc:f0', 'light', 2475),
(909, '2015-04-27 07:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(910, '2015-04-27 07:25:02', 'b8:27:eb:d5:dc:f0', 'light', 2597),
(911, '2015-04-27 07:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(912, '2015-04-27 07:35:01', 'b8:27:eb:d5:dc:f0', 'light', 2597),
(913, '2015-04-27 07:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(914, '2015-04-27 07:45:02', 'b8:27:eb:d5:dc:f0', 'light', 3082),
(915, '2015-04-27 07:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(916, '2015-04-27 07:55:01', 'b8:27:eb:d5:dc:f0', 'light', 3456),
(917, '2015-04-27 08:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(918, '2015-04-27 08:05:02', 'b8:27:eb:d5:dc:f0', 'light', 2358),
(919, '2015-04-27 08:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(920, '2015-04-27 08:15:01', 'b8:27:eb:d5:dc:f0', 'light', 3452),
(921, '2015-04-27 08:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(922, '2015-04-27 08:25:02', 'b8:27:eb:d5:dc:f0', 'light', 3080),
(923, '2015-04-27 08:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(924, '2015-04-27 08:35:01', 'b8:27:eb:d5:dc:f0', 'light', 4595),
(925, '2015-04-27 08:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(926, '2015-04-27 08:45:01', 'b8:27:eb:d5:dc:f0', 'light', 4807),
(927, '2015-04-27 08:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(928, '2015-04-27 08:55:02', 'b8:27:eb:d5:dc:f0', 'light', 4389),
(929, '2015-04-27 09:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(930, '2015-04-27 09:05:02', 'b8:27:eb:d5:dc:f0', 'light', 4077),
(931, '2015-04-27 09:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(932, '2015-04-27 09:15:01', 'b8:27:eb:d5:dc:f0', 'light', 4265),
(933, '2015-04-27 09:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(934, '2015-04-27 09:25:02', 'b8:27:eb:d5:dc:f0', 'light', 4257),
(935, '2015-04-27 09:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(936, '2015-04-27 09:35:02', 'b8:27:eb:d5:dc:f0', 'light', 4540),
(937, '2015-04-27 09:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(938, '2015-04-27 09:45:02', 'b8:27:eb:d5:dc:f0', 'light', 4446),
(939, '2015-04-27 09:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(940, '2015-04-27 09:55:02', 'b8:27:eb:d5:dc:f0', 'light', 4859),
(941, '2015-04-27 10:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(942, '2015-04-27 10:05:02', 'b8:27:eb:d5:dc:f0', 'light', 6527),
(943, '2015-04-27 10:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(944, '2015-04-27 10:15:01', 'b8:27:eb:d5:dc:f0', 'light', 5544),
(945, '2015-04-27 10:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(946, '2015-04-27 10:30:02', 'b8:27:eb:d5:dc:f0', 'light', 6829),
(947, '2015-04-27 10:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(948, '2015-04-27 10:40:01', 'b8:27:eb:d5:dc:f0', 'light', 6743),
(949, '2015-04-27 10:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(950, '2015-04-27 10:55:01', 'b8:27:eb:d5:dc:f0', 'light', 3855),
(951, '2015-04-27 11:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(952, '2015-04-27 11:05:02', 'b8:27:eb:d5:dc:f0', 'light', 5844),
(953, '2015-04-27 11:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(954, '2015-04-27 11:15:01', 'b8:27:eb:d5:dc:f0', 'light', 7005),
(955, '2015-04-27 11:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(956, '2015-04-27 11:25:02', 'b8:27:eb:d5:dc:f0', 'light', 7487),
(957, '2015-04-27 11:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(958, '2015-04-27 11:35:02', 'b8:27:eb:d5:dc:f0', 'light', 7002),
(959, '2015-04-27 11:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(960, '2015-04-27 11:45:02', 'b8:27:eb:d5:dc:f0', 'light', 8229),
(961, '2015-04-27 11:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(962, '2015-04-27 11:55:02', 'b8:27:eb:d5:dc:f0', 'light', 6717),
(963, '2015-04-27 12:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(964, '2015-04-27 12:05:01', 'b8:27:eb:d5:dc:f0', 'light', 5093),
(965, '2015-04-27 12:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(966, '2015-04-27 12:15:02', 'b8:27:eb:d5:dc:f0', 'light', 7237),
(967, '2015-04-27 12:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(968, '2015-04-27 12:25:02', 'b8:27:eb:d5:dc:f0', 'light', 7999),
(969, '2015-04-27 12:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(970, '2015-04-27 12:35:02', 'b8:27:eb:d5:dc:f0', 'light', 7582),
(971, '2015-04-27 12:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(972, '2015-04-27 12:45:01', 'b8:27:eb:d5:dc:f0', 'light', 4566),
(973, '2015-04-27 12:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(974, '2015-04-27 12:55:02', 'b8:27:eb:d5:dc:f0', 'light', 7438),
(975, '2015-04-27 13:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(976, '2015-04-27 13:05:02', 'b8:27:eb:d5:dc:f0', 'light', 5023),
(977, '2015-04-27 13:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(978, '2015-04-27 13:15:01', 'b8:27:eb:d5:dc:f0', 'light', 9316),
(979, '2015-04-27 13:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(980, '2015-04-27 13:25:01', 'b8:27:eb:d5:dc:f0', 'light', 5781),
(981, '2015-04-27 13:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(982, '2015-04-27 13:35:02', 'b8:27:eb:d5:dc:f0', 'light', 5786),
(983, '2015-04-27 13:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(984, '2015-04-27 13:45:01', 'b8:27:eb:d5:dc:f0', 'light', 5800),
(985, '2015-04-27 13:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(986, '2015-04-27 13:55:02', 'b8:27:eb:d5:dc:f0', 'light', 5713),
(987, '2015-04-27 14:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(988, '2015-04-27 14:05:01', 'b8:27:eb:d5:dc:f0', 'light', 6763),
(989, '2015-04-27 14:15:02', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(990, '2015-04-27 14:15:02', 'b8:27:eb:d5:dc:f0', 'light', 6588),
(991, '2015-04-27 14:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(992, '2015-04-27 14:25:02', 'b8:27:eb:d5:dc:f0', 'light', 6689),
(993, '2015-04-27 14:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(994, '2015-04-27 14:35:02', 'b8:27:eb:d5:dc:f0', 'light', 7227),
(995, '2015-04-27 14:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(996, '2015-04-27 14:45:02', 'b8:27:eb:d5:dc:f0', 'light', 7627),
(997, '2015-04-27 14:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(998, '2015-04-27 14:55:02', 'b8:27:eb:d5:dc:f0', 'light', 9368),
(999, '2015-04-27 15:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(1000, '2015-04-27 15:05:02', 'b8:27:eb:d5:dc:f0', 'light', 10114),
(1001, '2015-04-27 15:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 34),
(1002, '2015-04-27 15:15:01', 'b8:27:eb:d5:dc:f0', 'light', 3158),
(1003, '2015-04-27 15:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(1004, '2015-04-27 15:25:02', 'b8:27:eb:d5:dc:f0', 'light', 2353),
(1005, '2015-04-27 15:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 34),
(1006, '2015-04-27 15:35:02', 'b8:27:eb:d5:dc:f0', 'light', 11603),
(1007, '2015-04-27 15:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 35),
(1008, '2015-04-27 15:45:02', 'b8:27:eb:d5:dc:f0', 'light', 20270),
(1009, '2015-04-27 15:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(1010, '2015-04-27 15:55:01', 'b8:27:eb:d5:dc:f0', 'light', 2977),
(1011, '2015-04-27 16:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(1012, '2015-04-27 16:05:02', 'b8:27:eb:d5:dc:f0', 'light', 3937),
(1013, '2015-04-27 16:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 34),
(1014, '2015-04-27 16:15:01', 'b8:27:eb:d5:dc:f0', 'light', 36869),
(1015, '2015-04-27 16:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 37),
(1016, '2015-04-27 16:25:02', 'b8:27:eb:d5:dc:f0', 'light', 59388),
(1017, '2015-04-27 16:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 40),
(1018, '2015-04-27 16:35:02', 'b8:27:eb:d5:dc:f0', 'light', 65535),
(1019, '2015-04-27 16:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 33),
(1020, '2015-04-27 16:50:02', 'b8:27:eb:d5:dc:f0', 'light', 1688),
(1021, '2015-04-27 17:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 32),
(1022, '2015-04-27 17:00:02', 'b8:27:eb:d5:dc:f0', 'light', 4172),
(1023, '2015-04-27 17:19:24', 'b8:27:eb:d5:dc:f0', 'temperature', 27),
(1024, '2015-04-27 17:19:24', 'b8:27:eb:d5:dc:f0', 'light', 484),
(1025, '2015-04-27 17:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1026, '2015-04-27 17:30:02', 'b8:27:eb:d5:dc:f0', 'light', 244),
(1027, '2015-04-27 17:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(1028, '2015-04-27 17:40:02', 'b8:27:eb:d5:dc:f0', 'light', 500),
(1029, '2015-04-27 17:50:02', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(1030, '2015-04-27 17:50:02', 'b8:27:eb:d5:dc:f0', 'light', 788),
(1031, '2015-04-27 18:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(1032, '2015-04-27 18:00:02', 'b8:27:eb:d5:dc:f0', 'light', 641),
(1033, '2015-04-27 18:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 31),
(1034, '2015-04-27 18:10:01', 'b8:27:eb:d5:dc:f0', 'light', 549),
(1035, '2015-04-27 18:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1036, '2015-04-27 18:25:01', 'b8:27:eb:d5:dc:f0', 'light', 272),
(1037, '2015-04-27 18:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1038, '2015-04-27 18:35:01', 'b8:27:eb:d5:dc:f0', 'light', 208),
(1039, '2015-04-27 18:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1040, '2015-04-27 18:40:02', 'b8:27:eb:d5:dc:f0', 'light', 186),
(1041, '2015-04-27 18:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1042, '2015-04-27 18:55:02', 'b8:27:eb:d5:dc:f0', 'light', 62),
(1043, '2015-04-27 19:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1044, '2015-04-27 19:05:02', 'b8:27:eb:d5:dc:f0', 'light', 26),
(1045, '2015-04-27 19:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1046, '2015-04-27 19:20:02', 'b8:27:eb:d5:dc:f0', 'light', 4),
(1047, '2015-04-27 19:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1048, '2015-04-27 19:25:02', 'b8:27:eb:d5:dc:f0', 'light', 2),
(1049, '2015-04-27 19:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1050, '2015-04-27 19:30:02', 'b8:27:eb:d5:dc:f0', 'light', 1),
(1051, '2015-04-27 19:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1052, '2015-04-27 19:35:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(1053, '2015-04-27 19:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1054, '2015-04-27 19:50:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(1055, '2015-04-27 19:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1056, '2015-04-27 19:55:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(1057, '2015-04-27 20:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1058, '2015-04-27 20:00:01', 'b8:27:eb:d5:dc:f0', 'light', 0),
(1059, '2015-04-28 05:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 25),
(1060, '2015-04-28 05:25:01', 'b8:27:eb:d5:dc:f0', 'light', 272),
(1061, '2015-04-28 05:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 27),
(1062, '2015-04-28 05:35:02', 'b8:27:eb:d5:dc:f0', 'light', 273),
(1063, '2015-04-28 05:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 27),
(1064, '2015-04-28 05:40:01', 'b8:27:eb:d5:dc:f0', 'light', 260),
(1065, '2015-04-28 05:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 27),
(1066, '2015-04-28 05:50:01', 'b8:27:eb:d5:dc:f0', 'light', 292),
(1067, '2015-04-28 05:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 27),
(1068, '2015-04-28 05:55:01', 'b8:27:eb:d5:dc:f0', 'light', 357),
(1069, '2015-04-28 06:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1070, '2015-04-28 06:10:01', 'b8:27:eb:d5:dc:f0', 'light', 367),
(1071, '2015-04-28 06:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1072, '2015-04-28 06:20:01', 'b8:27:eb:d5:dc:f0', 'light', 345),
(1073, '2015-04-28 06:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1074, '2015-04-28 06:45:02', 'b8:27:eb:d5:dc:f0', 'light', 350),
(1075, '2015-04-28 06:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1076, '2015-04-28 06:50:02', 'b8:27:eb:d5:dc:f0', 'light', 355),
(1077, '2015-04-28 07:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1078, '2015-04-28 07:00:02', 'b8:27:eb:d5:dc:f0', 'light', 363),
(1079, '2015-04-28 07:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1080, '2015-04-28 07:05:02', 'b8:27:eb:d5:dc:f0', 'light', 366),
(1081, '2015-04-28 07:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1082, '2015-04-28 07:25:02', 'b8:27:eb:d5:dc:f0', 'light', 383),
(1083, '2015-04-28 07:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1084, '2015-04-28 07:30:02', 'b8:27:eb:d5:dc:f0', 'light', 386),
(1085, '2015-04-28 07:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1086, '2015-04-28 07:45:02', 'b8:27:eb:d5:dc:f0', 'light', 399),
(1087, '2015-04-28 07:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1088, '2015-04-28 07:55:02', 'b8:27:eb:d5:dc:f0', 'light', 414),
(1089, '2015-04-28 08:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1090, '2015-04-28 08:05:02', 'b8:27:eb:d5:dc:f0', 'light', 691),
(1091, '2015-04-28 08:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1092, '2015-04-28 08:10:02', 'b8:27:eb:d5:dc:f0', 'light', 734),
(1093, '2015-04-28 08:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1094, '2015-04-28 08:15:02', 'b8:27:eb:d5:dc:f0', 'light', 599),
(1095, '2015-04-28 08:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1096, '2015-04-28 08:20:01', 'b8:27:eb:d5:dc:f0', 'light', 611),
(1097, '2015-04-28 08:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1098, '2015-04-28 08:30:02', 'b8:27:eb:d5:dc:f0', 'light', 816),
(1099, '2015-04-28 08:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1100, '2015-04-28 08:35:02', 'b8:27:eb:d5:dc:f0', 'light', 778),
(1101, '2015-04-28 08:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1102, '2015-04-28 08:40:02', 'b8:27:eb:d5:dc:f0', 'light', 563),
(1103, '2015-04-28 08:45:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1104, '2015-04-28 08:45:02', 'b8:27:eb:d5:dc:f0', 'light', 538),
(1105, '2015-04-28 08:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1106, '2015-04-28 08:50:01', 'b8:27:eb:d5:dc:f0', 'light', 594),
(1107, '2015-04-28 09:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1108, '2015-04-28 09:00:02', 'b8:27:eb:d5:dc:f0', 'light', 692),
(1109, '2015-04-28 09:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1110, '2015-04-28 09:20:02', 'b8:27:eb:d5:dc:f0', 'light', 925),
(1111, '2015-04-28 09:30:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1112, '2015-04-28 09:30:02', 'b8:27:eb:d5:dc:f0', 'light', 830),
(1113, '2015-04-28 09:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1114, '2015-04-28 09:45:02', 'b8:27:eb:d5:dc:f0', 'light', 868),
(1115, '2015-04-28 09:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1116, '2015-04-28 09:55:02', 'b8:27:eb:d5:dc:f0', 'light', 620),
(1117, '2015-04-28 10:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1118, '2015-04-28 10:05:02', 'b8:27:eb:d5:dc:f0', 'light', 303),
(1119, '2015-04-28 10:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1120, '2015-04-28 10:10:02', 'b8:27:eb:d5:dc:f0', 'light', 322),
(1121, '2015-04-28 10:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1122, '2015-04-28 10:15:02', 'b8:27:eb:d5:dc:f0', 'light', 686),
(1123, '2015-04-28 10:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1124, '2015-04-28 10:25:02', 'b8:27:eb:d5:dc:f0', 'light', 1156),
(1125, '2015-04-28 10:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1126, '2015-04-28 10:30:02', 'b8:27:eb:d5:dc:f0', 'light', 680),
(1127, '2015-04-28 10:50:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1128, '2015-04-28 10:50:02', 'b8:27:eb:d5:dc:f0', 'light', 408),
(1129, '2015-04-28 10:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1130, '2015-04-28 10:55:02', 'b8:27:eb:d5:dc:f0', 'light', 511),
(1131, '2015-04-28 11:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1132, '2015-04-28 11:00:02', 'b8:27:eb:d5:dc:f0', 'light', 1248),
(1133, '2015-04-28 11:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1134, '2015-04-28 11:05:01', 'b8:27:eb:d5:dc:f0', 'light', 1092),
(1135, '2015-04-28 11:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1136, '2015-04-28 11:20:02', 'b8:27:eb:d5:dc:f0', 'light', 663),
(1137, '2015-04-28 11:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1138, '2015-04-28 11:30:02', 'b8:27:eb:d5:dc:f0', 'light', 619),
(1139, '2015-04-28 11:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1140, '2015-04-28 11:45:02', 'b8:27:eb:d5:dc:f0', 'light', 981),
(1141, '2015-04-28 11:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1142, '2015-04-28 11:50:01', 'b8:27:eb:d5:dc:f0', 'light', 1214),
(1143, '2015-04-28 11:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1144, '2015-04-28 11:55:01', 'b8:27:eb:d5:dc:f0', 'light', 1012),
(1145, '2015-04-28 12:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1146, '2015-04-28 12:05:01', 'b8:27:eb:d5:dc:f0', 'light', 1191),
(1147, '2015-04-28 12:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1148, '2015-04-28 12:20:02', 'b8:27:eb:d5:dc:f0', 'light', 876),
(1149, '2015-04-28 12:25:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1150, '2015-04-28 12:25:02', 'b8:27:eb:d5:dc:f0', 'light', 496),
(1151, '2015-04-28 12:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1152, '2015-04-28 12:50:01', 'b8:27:eb:d5:dc:f0', 'light', 1228),
(1153, '2015-04-28 12:55:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1154, '2015-04-28 12:55:01', 'b8:27:eb:d5:dc:f0', 'light', 614),
(1155, '2015-04-28 13:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1156, '2015-04-28 13:10:01', 'b8:27:eb:d5:dc:f0', 'light', 1459),
(1157, '2015-04-28 13:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1158, '2015-04-28 13:25:01', 'b8:27:eb:d5:dc:f0', 'light', 1894),
(1159, '2015-04-28 13:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1160, '2015-04-28 13:50:01', 'b8:27:eb:d5:dc:f0', 'light', 917),
(1161, '2015-04-28 14:05:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1162, '2015-04-28 14:05:02', 'b8:27:eb:d5:dc:f0', 'light', 1822),
(1163, '2015-04-28 14:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1164, '2015-04-28 14:10:01', 'b8:27:eb:d5:dc:f0', 'light', 961),
(1165, '2015-04-28 14:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1166, '2015-04-28 14:15:01', 'b8:27:eb:d5:dc:f0', 'light', 1980),
(1167, '2015-04-28 14:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1168, '2015-04-28 14:20:01', 'b8:27:eb:d5:dc:f0', 'light', 817),
(1169, '2015-04-28 14:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1170, '2015-04-28 14:35:01', 'b8:27:eb:d5:dc:f0', 'light', 1593),
(1171, '2015-04-28 15:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1172, '2015-04-28 15:20:01', 'b8:27:eb:d5:dc:f0', 'light', 752),
(1173, '2015-04-28 15:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1174, '2015-04-28 15:25:01', 'b8:27:eb:d5:dc:f0', 'light', 1028),
(1175, '2015-04-28 16:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1176, '2015-04-28 16:00:01', 'b8:27:eb:d5:dc:f0', 'light', 1096),
(1177, '2015-04-28 16:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1178, '2015-04-28 16:05:01', 'b8:27:eb:d5:dc:f0', 'light', 810),
(1179, '2015-04-28 16:10:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1180, '2015-04-28 16:10:02', 'b8:27:eb:d5:dc:f0', 'light', 1148),
(1181, '2015-04-28 16:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1182, '2015-04-28 16:25:02', 'b8:27:eb:d5:dc:f0', 'light', 949),
(1183, '2015-04-28 16:35:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1184, '2015-04-28 16:35:02', 'b8:27:eb:d5:dc:f0', 'light', 766),
(1185, '2015-04-28 16:40:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1186, '2015-04-28 16:40:01', 'b8:27:eb:d5:dc:f0', 'light', 614),
(1187, '2015-04-28 16:50:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1188, '2015-04-28 16:50:02', 'b8:27:eb:d5:dc:f0', 'light', 1156),
(1189, '2015-04-28 16:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1190, '2015-04-28 16:55:02', 'b8:27:eb:d5:dc:f0', 'light', 1028),
(1191, '2015-04-28 17:00:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1192, '2015-04-28 17:00:02', 'b8:27:eb:d5:dc:f0', 'light', 1001),
(1193, '2015-04-28 17:15:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1194, '2015-04-28 17:15:02', 'b8:27:eb:d5:dc:f0', 'light', 300),
(1195, '2015-04-28 17:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1196, '2015-04-28 17:30:02', 'b8:27:eb:d5:dc:f0', 'light', 1180),
(1197, '2015-04-28 17:35:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1198, '2015-04-28 17:35:02', 'b8:27:eb:d5:dc:f0', 'light', 1379),
(1199, '2015-04-28 17:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1200, '2015-04-28 17:45:02', 'b8:27:eb:d5:dc:f0', 'light', 636),
(1201, '2015-04-28 17:50:01', 'b8:27:eb:d5:dc:f0', 'temperature', 30),
(1202, '2015-04-28 17:50:02', 'b8:27:eb:d5:dc:f0', 'light', 472),
(1203, '2015-04-28 18:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1204, '2015-04-28 18:00:02', 'b8:27:eb:d5:dc:f0', 'light', 330),
(1205, '2015-04-28 18:15:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1206, '2015-04-28 18:15:02', 'b8:27:eb:d5:dc:f0', 'light', 367),
(1207, '2015-04-28 18:20:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1208, '2015-04-28 18:20:02', 'b8:27:eb:d5:dc:f0', 'light', 506),
(1209, '2015-04-28 18:40:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1210, '2015-04-28 18:40:02', 'b8:27:eb:d5:dc:f0', 'light', 172),
(1211, '2015-04-28 18:45:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1212, '2015-04-28 18:45:02', 'b8:27:eb:d5:dc:f0', 'light', 124),
(1213, '2015-04-28 18:55:02', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1214, '2015-04-28 18:55:02', 'b8:27:eb:d5:dc:f0', 'light', 63),
(1215, '2015-04-28 19:00:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1216, '2015-04-28 19:00:01', 'b8:27:eb:d5:dc:f0', 'light', 41),
(1217, '2015-04-28 19:05:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1218, '2015-04-28 19:05:01', 'b8:27:eb:d5:dc:f0', 'light', 29),
(1219, '2015-04-28 19:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1220, '2015-04-28 19:10:02', 'b8:27:eb:d5:dc:f0', 'light', 18),
(1221, '2015-04-28 19:15:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1222, '2015-04-28 19:15:01', 'b8:27:eb:d5:dc:f0', 'light', 10),
(1223, '2015-04-28 19:20:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1224, '2015-04-28 19:20:02', 'b8:27:eb:d5:dc:f0', 'light', 5),
(1225, '2015-04-28 19:25:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1226, '2015-04-28 19:25:02', 'b8:27:eb:d5:dc:f0', 'light', 2),
(1227, '2015-04-28 19:30:01', 'b8:27:eb:d5:dc:f0', 'temperature', 29),
(1228, '2015-04-28 19:30:02', 'b8:27:eb:d5:dc:f0', 'light', 1),
(1229, '2015-04-28 19:50:02', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1230, '2015-04-28 19:50:02', 'b8:27:eb:d5:dc:f0', 'light', 0),
(1231, '2015-04-28 20:10:01', 'b8:27:eb:d5:dc:f0', 'temperature', 28),
(1232, '2015-04-28 20:10:01', 'b8:27:eb:d5:dc:f0', 'light', 0);

-- --------------------------------------------------------

--
-- Table structure for table `tbl_users`
--

CREATE TABLE IF NOT EXISTS `tbl_users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uname` varchar(45) NOT NULL,
  `prename` varchar(45) NOT NULL,
  `lastname` varchar(45) NOT NULL,
  `password` text NOT NULL,
  `passwordkey` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `tbl_users`
--

INSERT INTO `tbl_users` (`id`, `uname`, `prename`, `lastname`, `password`, `passwordkey`) VALUES
(1, 'test', 'Jens', 'Sterckx', '21CAplOLEsGLE', '21cdedd99c19e2fe8eac675929ca87f70f2c2a4931649583a211d9b6ef1580cd');

--
-- Constraints for dumped tables
--

--
-- Constraints for table `tbl_minfo`
--
ALTER TABLE `tbl_minfo`
  ADD CONSTRAINT `tbl_minfo_ibfk_1` FOREIGN KEY (`MAC`) REFERENCES `tbl_modules` (`MAC`) ON DELETE NO ACTION ON UPDATE NO ACTION;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
